var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/KeyboardShortcutsComponent.html",[0,0.73,1,0.978]],["body/components/KeyboardShortcutsComponent.html",[0,1.33,1,1.581,2,1.998,3,0.601,4,0.601,5,3.208,6,2.054,7,0.424,8,0.363,9,0.408,10,3.614,11,3.015,12,2.054,13,0.601,14,2.813,15,3.521,16,1.421,17,1.47,18,2.813,19,3.521,20,1.719,21,1.998,22,1.272,23,2.45,24,2.813,25,1.719,26,2.676,27,3.208,28,3.208,29,2.278,30,1.713,31,2.567,32,1.825,33,0.346,34,1.289,35,1.47,36,1.179,37,1.998,38,2.45,39,2.346,40,0.581,41,0.058,42,1.368,43,1.179,44,3.521,45,1.961,46,1.433,47,0.702,48,1.581,49,2.571,50,1.697,51,2.346,52,1.368,53,2.571,54,1.235,55,1.488,56,3.521,57,3.521,58,1.488,59,1.289,60,1.433,61,1.116,62,1.116,63,1.961,64,2.054,65,2.109,66,1.368,67,1.096,68,2.813,69,0.815,70,1.096,71,1.713,72,0.815,73,2.054,74,1.255,75,1.713,76,0.508,77,0.815,78,1.516,79,2.571,80,1.713,81,2.571,82,1.719,83,1.713,84,2.054,85,0.702,86,1.713,87,2.054,88,2.813,89,3.015,90,2.676,91,1.272,92,2.571,93,0.702,94,1.459,95,2.054,96,2.571,97,2.054,98,2.054,99,2.571,100,2.571,101,1.459,102,2.571,103,1.459,104,2.054,105,2.813,106,0.815,107,3.45,108,2.054,109,2.054,110,0.941,111,0.941,112,1.459,113,0.941,114,1.459,115,2.054,116,0.037,117,0.037]],["title/directives/KeyboardShortcutsDirective.html",[106,0.847,113,0.978]],["body/directives/KeyboardShortcutsDirective.html",[3,0.669,4,0.669,7,0.472,8,0.362,9,0.387,13,0.669,16,1.281,17,1.386,21,1.624,23,2.147,25,1.848,28,3.387,29,2.406,30,1.907,31,2.147,33,0.385,36,1.033,37,2.56,38,2.56,39,2.522,40,0.571,41,0.058,42,0.907,43,1.158,45,2.071,48,1.652,59,1.048,60,0.907,61,0.907,62,1.199,64,2.286,65,1.398,66,1.343,67,1.281,68,3.387,69,0.907,70,1.158,76,0.566,77,0.907,78,1.487,82,2.291,83,1.907,84,2.286,85,1.033,86,1.907,87,2.286,88,2.286,89,3.127,90,2.825,91,1.343,93,1.281,94,1.624,98,2.286,101,1.624,103,1.624,106,1.6,112,1.624,113,1.386,114,2.79,116,0.04,117,0.04,118,3.604,119,2.286,120,3.023,121,3.023,122,1.386,123,3.785,124,2.825,125,1.166,126,2.862,127,2.147,128,1.599,129,2.825,130,1.386,131,2.286,132,2.862,133,2.862,134,2.862,135,2.862,136,3.785,137,2.862,138,2.862,139,1.209,140,2.862,141,2.862,142,2.286,143,2.286,144,3.785,145,1.624,146,2.862,147,2.862]],["title/components/KeyboardShortcutsHelpComponent.html",[0,0.73,110,0.978]],["body/components/KeyboardShortcutsHelpComponent.html",[0,0.927,1,0.484,2,1.213,3,0.309,4,0.309,5,1.056,6,1.056,7,0.218,8,0.376,9,0.397,13,1.028,16,1.222,20,1.044,22,0.677,23,1.527,25,1.044,26,1.794,29,1.527,30,0.881,31,1.926,32,1.306,33,0.416,34,0.783,35,0.986,37,1.213,39,1.425,40,0.593,41,0.058,42,1.076,43,1.269,45,1.044,47,0.992,48,1.612,52,1.581,54,1.255,59,0.783,60,1.261,61,0.677,62,1.211,65,1.314,66,1.338,67,1.153,69,0.419,70,0.584,71,0.881,73,1.056,74,0.645,75,1.425,76,0.261,77,0.419,78,1.534,82,2.245,83,0.881,85,0.927,86,1.425,89,1.794,90,1.425,91,1.418,95,1.056,103,0.75,104,1.056,105,1.708,106,0.419,107,2.47,108,1.056,109,1.056,110,1.546,111,1.885,112,0.75,113,0.484,114,0.75,115,1.056,116,0.022,117,0.022,125,1.009,129,1.425,145,2.258,148,1.322,149,1.056,150,3.18,151,3.374,152,3.285,153,1.708,154,2.692,155,1.708,156,2.138,157,0.783,158,2.692,159,2.902,160,2.902,161,2.902,162,2.902,163,2.47,164,2.15,165,2.15,166,2.15,167,2.712,168,2.15,169,2.15,170,3.18,171,2.138,172,1.322,173,2.27,174,3.18,175,1.942,176,1.322,177,2.712,178,1.708,179,2.262,180,1.322,181,1.708,182,1.708,183,2.712,184,1.322,185,1.708,186,2.138,187,2.138,188,2.712,189,2.982,190,1.322,191,1.322,192,1.322,193,1.322,194,3.633,195,1.322,196,1.322,197,1.322,198,1.425,199,1.322,200,1.322,201,1.322,202,2.138,203,2.692,204,2.692,205,2.138,206,1.056,207,2.138,208,3.396,209,3.285,210,1.322,211,0.559,212,1.056,213,2.138,214,1.425,215,0.881,216,2.138,217,0.903,218,1.056,219,1.056,220,2.692,221,1.322,222,2.138,223,1.322,224,1.322,225,1.322,226,1.322,227,1.322,228,1.322,229,1.527,230,1.322,231,2.333,232,1.056,233,1.056,234,1.056,235,1.314,236,2.06,237,1.322,238,1.322,239,1.708,240,1.322,241,2.692,242,1.322,243,1.322,244,2.692,245,1.322,246,1.867,247,3.092,248,1.322,249,1.322,250,1.322,251,2.138,252,1.322,253,1.322,254,1.322,255,0.783,256,1.322,257,2.138,258,1.322,259,1.322,260,1.322,261,1.322,262,1.322,263,2.138,264,3.396,265,2.138,266,1.708,267,4.112,268,2.831,269,1.322,270,3.092,271,3.092,272,2.138,273,2.138,274,1.322,275,1.322,276,2.138,277,1.322,278,1.322,279,1.322,280,2.138,281,0.783,282,1.322,283,1.322,284,1.322,285,1.322,286,1.322,287,1.322,288,1.322,289,1.322,290,2.692,291,2.138,292,3.092,293,2.138,294,1.322,295,1.056,296,1.056,297,1.322,298,1.056,299,1.322,300,1.322,301,1.322,302,1.322,303,1.322,304,1.322,305,1.322,306,1.322,307,2.138,308,1.322,309,1.322,310,1.322,311,1.322,312,2.138,313,2.138,314,1.322,315,2.138,316,1.322,317,1.322,318,1.322,319,1.322,320,1.322,321,1.056,322,1.322,323,1.322,324,1.322,325,1.322,326,0.881,327,1.322,328,1.322,329,1.322,330,1.322,331,1.322,332,1.322,333,2.138,334,1.322,335,2.138,336,1.425,337,2.692,338,1.322,339,1.425,340,2.138,341,1.322,342,1.322,343,1.322,344,1.056,345,2.138,346,1.322,347,1.322,348,1.056,349,1.322,350,1.322,351,1.322,352,1.322,353,1.322,354,1.322,355,1.322,356,1.322,357,2.138,358,3.092,359,2.138,360,1.322,361,1.322,362,1.322,363,1.322,364,1.322,365,3.092,366,0.881,367,1.322,368,1.322,369,1.322,370,1.322,371,1.322,372,1.322,373,1.322,374,1.322,375,2.138,376,1.322,377,1.322,378,1.322,379,1.322,380,1.322,381,1.322,382,1.322,383,1.322,384,1.322,385,1.322,386,1.056,387,1.322,388,0.645,389,1.322,390,1.056,391,1.322,392,1.322,393,1.322]],["title/injectables/KeyboardShortcutsHelpService.html",[217,1.129,394,0.978]],["body/injectables/KeyboardShortcutsHelpService.html",[3,0.798,4,0.798,7,0.563,8,0.34,9,0.387,13,1.158,16,1.398,20,2.07,22,1.343,33,0.46,35,1.688,40,0.46,41,0.058,43,0.933,47,0.933,48,1.251,54,1.316,63,2.251,66,1.461,69,1.082,70,1.259,76,0.676,77,1.082,78,1.082,93,0.933,94,1.938,111,1.552,116,0.045,117,0.045,157,1.552,174,3.387,175,2.037,189,2.825,214,3.072,215,2.276,217,1.791,295,3.387,326,2.825,394,1.552,395,1.938,396,2.825,397,2.729,398,2.825,399,4.24,400,3.387,401,4.24,402,3.387,403,4.24,404,4.24,405,3.417,406,3.387,407,2.729,408,2.276,409,1.938]],["title/modules/KeyboardShortcutsModule.html",[410,1.781,411,1.305]],["body/modules/KeyboardShortcutsModule.html",[1,1.933,3,0.769,4,0.769,7,0.543,8,0.332,9,0.381,11,2.194,34,1.205,35,1.205,41,0.058,43,0.899,62,1.043,66,1.643,69,1.043,70,1.131,71,2.194,76,0.651,77,1.043,91,1.043,110,1.933,113,1.933,116,0.044,117,0.044,217,1.75,218,3.31,219,2.63,411,2.598,412,2.194,413,3.31,414,2.63,415,2.63,416,2.63,417,3.31,418,2.194,419,1.043,420,4.143,421,3.293,422,3.31,423,4.143,424,3.31,425,4.533,426,3.293,427,4.533,428,3.621,429,4.143,430,2.63,431,2.023,432,3.293,433,3.293,434,3.293,435,3.293,436,3.293,437,3.293,438,4.143,439,3.293,440,2.63,441,3.293]],["title/injectables/KeyboardShortcutsSelectService.html",[394,0.978,431,1.305]],["body/injectables/KeyboardShortcutsSelectService.html",[3,0.821,4,0.821,7,0.58,8,0.374,9,0.401,13,0.821,20,1.716,33,0.473,34,1.58,35,1.709,36,1.275,40,0.581,41,0.057,43,1.178,51,2.875,52,1.479,54,1.389,55,1.485,59,1.58,60,1.367,61,1.367,62,1.479,63,2.377,66,1.367,69,1.113,70,1.329,74,1.716,76,0.695,77,1.113,91,1.113,93,0.959,94,1.994,116,0.045,117,0.045,125,1.091,127,1.994,298,2.807,388,1.716,394,1.58,395,1.994,396,3.111,398,2.342,407,2.807,408,2.342,409,1.994,431,2.107,442,2.807,443,3.515,444,3.515,445,4.314,446,3.515,447,3.446,448,3.111,449,3.446,450,1.716,451,2.807,452,2.342,453,2.807,454,3.515]],["title/injectables/KeyboardShortcutsService.html",[70,0.73,394,0.978]],["body/injectables/KeyboardShortcutsService.html",[3,0.263,4,0.263,7,0.186,8,0.27,9,0.321,13,0.263,16,1.121,17,1.028,21,1.769,22,0.889,25,0.55,29,1.064,33,0.152,34,0.686,35,1.618,36,0.657,38,0.639,40,0.378,41,0.058,42,0.594,43,0.851,45,0.55,46,1.229,47,0.657,48,0.686,51,1.249,52,1.38,54,1.378,58,1.317,59,0.882,60,0.763,61,0.763,62,1.066,63,1.742,65,0.55,66,1.13,67,0.308,69,0.357,70,0.766,72,0.357,74,0.55,76,0.223,77,0.357,78,1.477,82,2.389,85,0.657,91,1.627,93,1.059,101,1.064,103,0.639,116,0.02,117,0.02,122,0.412,125,0.935,128,0.476,130,0.412,131,0.9,139,0.792,145,2.622,157,0.686,179,1.604,198,1.604,211,1.017,214,1.604,215,0.751,229,1.769,231,1.769,236,1.249,239,0.9,255,1.745,268,1.593,281,1.765,321,2.243,326,0.751,348,0.9,386,0.9,388,2.091,390,0.9,394,0.686,395,0.639,402,1.498,408,0.751,409,0.639,418,1.249,419,0.357,424,0.9,430,0.9,447,1.498,448,1.249,449,2.85,450,0.55,452,0.751,455,0.9,456,2.49,457,1.875,458,1.126,459,1.875,460,1.875,461,1.126,462,1.875,463,1.249,464,1.507,465,1.875,466,3.117,467,1.126,468,1.875,469,1.126,470,1.875,471,1.498,472,1.875,473,2.408,474,1.875,475,1.875,476,1.126,477,1.126,478,0.751,479,0.751,480,0.751,481,0.751,482,0.751,483,2.242,484,1.126,485,1.875,486,1.126,487,1.924,488,1.126,489,2.807,490,2.33,491,1.126,492,0.9,493,2.807,494,1.875,495,2.408,496,1.126,497,1.176,498,1.126,499,1.126,500,1.249,501,0.751,502,1.126,503,0.751,504,1.126,505,1.875,506,0.915,507,1.875,508,1.126,509,1.875,510,1.126,511,1.875,512,0.882,513,1.126,514,1.126,515,1.875,516,0.55,517,1.126,518,0.55,519,1.126,520,0.55,521,1.126,522,3.42,523,1.249,524,2.158,525,1.875,526,1.126,527,1.126,528,1.126,529,1.126,530,1.126,531,1.126,532,2.408,533,0.55,534,3.117,535,1.126,536,1.126,537,1.126,538,1.126,539,1.126,540,2.408,541,1.875,542,1.126,543,1.126,544,1.593,545,1.126,546,1.126,547,1.126,548,1.126,549,1.126,550,1.126,551,1.498,552,1.593,553,2.408,554,2.408,555,1.126,556,1.875,557,0.55,558,1.498,559,0.9,560,0.9,561,1.126,562,1.126,563,1.498,564,1.126,565,1.126,566,1.126,567,1.126,568,1.126,569,1.126,570,1.126,571,1.126,572,1.875,573,1.126,574,1.126,575,1.126,576,1.126,577,1.126,578,1.126,579,1.126,580,1.498,581,1.126,582,1.875,583,1.126,584,1.126,585,1.126,586,1.875,587,1.875,588,1.875,589,3.365,590,1.875,591,1.875,592,1.126,593,1.875,594,1.875,595,1.875,596,2.807,597,2.807,598,1.875,599,1.126,600,1.126,601,1.126,602,1.126,603,1.126,604,1.126,605,1.126,606,1.126,607,1.126,608,1.126,609,1.126,610,1.126,611,1.126,612,1.126,613,1.875,614,1.875,615,1.126,616,1.126,617,1.126,618,3.737,619,1.875,620,1.875,621,3.365,622,3.568,623,1.126,624,1.126,625,1.126,626,1.126,627,1.126,628,2.408,629,1.126,630,1.126,631,1.126,632,1.126,633,2.408,634,1.126,635,1.126,636,1.126,637,2.807,638,1.126,639,3.365,640,1.875,641,3.879,642,0.9,643,1.126,644,1.924,645,0.9,646,1.126,647,1.126,648,1.875,649,1.126,650,1.875,651,1.126,652,1.126,653,1.875,654,0.9,655,1.875,656,1.126,657,1.126,658,0.9,659,1.924,660,1.126,661,1.126,662,1.126,663,0.9,664,1.126,665,0.9,666,1.126,667,0.9,668,0.9,669,1.126,670,1.126,671,1.126,672,1.126,673,1.126,674,1.126,675,1.126,676,1.126,677,1.126,678,1.126,679,1.126,680,1.126,681,1.126,682,1.126,683,1.126,684,1.126,685,0.9,686,1.875,687,1.126,688,1.875,689,3.117,690,1.875,691,0.9,692,1.126,693,1.126,694,0.9,695,1.875,696,1.875,697,2.408,698,1.875,699,1.126,700,2.49,701,1.126,702,1.875,703,1.126,704,1.126,705,1.126,706,1.126,707,1.126,708,1.126,709,1.126,710,0.915,711,1.126,712,1.126,713,1.126,714,1.126,715,1.126,716,1.875,717,1.875,718,1.126,719,1.126,720,1.126,721,1.875,722,1.126,723,2.807,724,1.126,725,1.126,726,1.126,727,1.126,728,1.875,729,2.408,730,1.875,731,1.126,732,0.751,733,1.126,734,1.126,735,1.126,736,1.126,737,1.126,738,1.126,739,2.408,740,1.126,741,1.875,742,1.126,743,1.126,744,1.875,745,1.126,746,1.126,747,1.126,748,1.126,749,1.875,750,1.126,751,1.126,752,2.49,753,1.498,754,1.498,755,1.126,756,1.126,757,1.126,758,2.408,759,1.126,760,1.126,761,0.751,762,1.126,763,1.126,764,0.751,765,1.126,766,0.9,767,0.639,768,0.9,769,0.751,770,1.126,771,1.126,772,1.126,773,1.126,774,1.498,775,1.126,776,1.126,777,1.126,778,0.9,779,0.9,780,1.126,781,1.126,782,1.126,783,1.126,784,0.9,785,0.9,786,1.126,787,1.126,788,1.126,789,1.126,790,1.126,791,1.875,792,1.126,793,1.126,794,1.126,795,1.875,796,1.126,797,1.875,798,1.593,799,1.126,800,1.126,801,1.126,802,0.639,803,1.126,804,1.126,805,1.126]],["title/interfaces/Shortcut.html",[125,0.624,806,0.847]],["body/interfaces/Shortcut.html",[0,0.761,3,0.651,4,0.651,7,0.46,8,0.298,9,0.358,13,1.159,16,0.761,17,1.703,22,0.883,32,1.178,33,0.375,34,1.362,36,1.219,40,0.668,41,0.058,42,1.415,43,0.761,46,1.178,47,1.27,50,1.571,52,1.671,54,1.372,55,1.571,58,1.571,59,1.02,60,0.883,61,1.592,62,0.883,67,1.306,72,1.415,76,0.92,78,0.883,85,1.015,93,0.761,106,0.883,111,1.362,116,0.039,117,0.039,122,1.635,125,1.159,128,1.178,130,1.532,139,1.571,157,1.362,173,1.816,175,2.022,211,1.178,235,2.18,246,1.816,255,1.788,281,1.817,419,1.178,464,1.571,490,1.581,497,1.816,506,2.18,512,1.02,516,2.18,518,1.816,520,1.361,524,1.361,533,1.361,544,1.581,552,1.581,557,1.816,710,1.816,767,1.581,798,1.581,802,1.581,806,1.415,807,1.581,808,1.361,809,2.11,810,2.787,811,2.11,812,2.11,813,2.478,814,2.11,815,2.043,816,2.11,817,2.11,818,2.11,819,1.581,820,1.581,821,1.581,822,1.581,823,1.581,824,1.581,825,1.581,826,2.11,827,1.581,828,2.11]],["title/interfaces/ShortcutEventOutput.html",[72,0.847,806,0.847]],["body/interfaces/ShortcutEventOutput.html",[0,0.828,3,0.708,4,0.708,7,0.5,8,0.243,9,0.37,13,1.019,16,0.828,17,1.597,22,1.245,32,1.281,33,0.408,36,1.26,40,0.643,41,0.058,42,1.245,46,1.245,47,1.191,50,1.281,52,1.662,54,1.394,55,1.281,58,1.281,67,1.305,72,1.382,76,0.945,78,0.961,85,0.828,93,0.828,111,1.11,116,0.041,117,0.041,122,1.689,125,1.144,128,1.281,130,1.597,139,1.661,157,1.439,173,1.48,175,1.661,211,1.281,235,1.48,246,1.48,255,1.87,281,1.75,419,0.961,464,1.281,490,1.72,497,1.48,506,1.919,512,1.11,516,1.48,518,1.48,520,1.48,524,1.48,533,1.48,544,1.72,552,1.72,557,1.48,710,1.48,767,2.23,798,1.72,802,1.72,806,1.462,807,1.72,808,1.48,809,1.72,811,1.72,812,1.72,813,2.02,814,1.72,815,2.129,816,1.72,817,1.72,818,2.23,819,1.72,820,1.72,821,1.72,822,1.72,823,1.72,824,1.72,825,1.72,826,2.618,827,2.23,828,2.618]],["title/interfaces/ShortcutInput.html",[46,0.847,806,0.847]],["body/interfaces/ShortcutInput.html",[0,1.059,3,0.695,4,0.695,7,0.49,8,0.238,9,0.367,13,1.009,16,1.059,17,1.677,22,0.942,32,1.64,33,0.4,36,1.33,40,0.639,41,0.058,42,1.229,46,1.369,47,1.25,50,1.256,52,1.612,54,1.297,55,1.256,58,1.256,61,1.451,67,1.374,72,1.229,76,0.94,78,0.942,85,0.812,93,0.812,111,1.089,116,0.041,117,0.041,122,1.784,125,1.159,128,1.64,130,1.843,139,2.058,157,1.421,173,1.452,175,1.64,211,1.64,235,1.452,246,1.452,255,1.739,281,1.739,419,0.942,464,1.256,490,1.687,497,1.452,506,1.895,512,1.089,516,1.452,518,1.452,520,1.895,524,1.452,533,2.109,544,1.687,552,1.687,557,1.452,710,1.452,767,1.687,798,1.687,802,1.687,806,1.451,807,1.687,808,1.452,809,1.687,811,1.687,812,1.687,813,1.981,814,1.687,815,1.895,816,1.687,817,1.687,818,2.451,819,2.202,820,2.202,821,2.202,822,2.202,823,2.202,824,2.202,825,1.687,826,2.202,827,1.687,828,2.202]],["title/coverage.html",[829,2.888]],["body/coverage.html",[0,1.097,1,1.148,7,0.517,8,0.434,9,0.434,10,2.506,11,2.09,12,2.506,40,0.422,41,0.057,46,0.994,70,0.856,72,0.994,106,0.994,110,1.148,113,1.148,116,0.042,117,0.042,118,2.506,119,2.506,125,0.733,149,2.506,217,1.325,229,1.78,266,4.014,268,3.001,394,1.623,396,2.677,397,2.506,431,1.532,442,2.506,455,2.506,478,2.09,479,2.09,480,2.09,481,2.09,482,2.09,483,2.09,500,2.09,501,2.09,503,2.09,512,1.148,806,1.404,808,2.164,829,2.506,830,2.09,831,3.137,832,3.137,833,3.137,834,3.137,835,3.137,836,4.432,837,4.065,838,5.291,839,5.291,840,3.137,841,2.506,842,2.506,843,3.137,844,3.137,845,2.506,846,3.137,847,3.137,848,3.137,849,3.348,850,2.506,851,2.506,852,2.506,853,3.137,854,2.506]],["title/miscellaneous/enumerations.html",[855,0.949,856,2.56]],["body/miscellaneous/enumerations.html",[8,0.329,9,0.329,33,0.552,36,1.291,41,0.055,48,1.825,67,1.291,116,0.05,117,0.05,122,1.732,130,1.732,808,2.003,855,1.733,856,3.277,857,4.103]],["title/miscellaneous/functions.html",[855,0.949,858,2.56]],["body/miscellaneous/functions.html",[8,0.33,9,0.33,33,0.554,40,0.554,41,0.054,59,1.507,60,1.304,61,1.304,62,1.304,116,0.05,117,0.05,501,3.158,512,1.507,849,2.743,855,1.739,858,3.288,859,3.288,860,4.116,861,2.743]],["title/index.html",[33,0.303,862,1.795,863,1.795]],["body/index.html",[0,1.156,1,1.09,2,1.461,7,0.335,8,0.099,9,0.4,13,1.118,14,2.378,16,1.402,17,1.726,18,0.99,20,1.896,21,0.703,22,1.179,23,0.703,24,0.99,25,0.605,26,1.352,27,2.058,31,1.461,32,1.936,34,1.291,35,0.743,36,1.06,37,2.203,38,1.151,40,0.442,41,0.058,42,1.117,43,0.338,45,1.454,46,1.274,47,0.963,50,1.258,52,1.481,54,1.374,55,1.572,58,0.524,60,1.23,63,1.722,65,1.817,66,1.117,67,1.264,69,0.816,72,1.394,74,0.991,75,1.352,76,0.736,77,0.943,80,1.983,82,0.991,85,0.703,91,0.943,93,0.338,97,1.621,101,1.151,106,1.04,110,0.943,111,1.712,112,0.703,114,1.461,116,0.021,117,0.021,120,0.99,121,0.99,122,1.202,124,1.352,125,1.043,127,1.461,128,0.857,129,1.983,130,1.514,139,0.857,142,2.378,143,2.378,150,2.623,151,0.99,152,3.384,153,1.621,155,0.99,157,0.454,159,2.058,160,0.99,161,2.058,162,1.621,163,0.99,164,0.99,165,0.99,166,1.621,167,0.99,168,0.99,169,0.99,170,2.378,173,2.068,175,1.859,177,1.621,178,1.621,179,2.822,181,1.621,182,1.621,183,0.99,185,0.99,188,0.99,189,1.983,198,0.826,206,1.621,209,0.99,211,1.088,212,2.058,217,0.857,229,1.151,235,2.019,236,2.822,246,1.454,255,0.943,281,1.695,296,0.99,336,1.983,339,1.983,344,1.621,388,1.722,398,1.983,400,0.99,406,0.99,409,1.151,410,1.716,411,0.991,419,0.393,422,0.99,428,0.99,431,0.991,440,1.621,448,1.716,450,1.454,452,1.716,453,0.99,456,2.058,463,0.826,464,1.258,471,0.99,492,0.99,497,0.605,506,0.605,516,0.605,518,0.605,520,0.605,522,3.211,523,0.826,524,1.722,533,0.605,557,0.991,558,1.621,559,0.99,560,2.378,563,0.99,642,1.621,644,0.99,645,0.99,654,3.102,658,1.621,659,2.058,663,0.99,665,1.621,667,0.99,668,0.99,694,0.99,710,0.991,732,0.826,752,1.621,753,0.99,754,0.99,761,0.826,764,1.716,766,0.99,768,1.621,769,2.48,774,0.99,778,0.99,779,0.99,806,0.643,809,0.703,811,0.703,812,0.703,814,0.703,815,0.991,816,0.703,817,1.461,818,0.703,819,0.703,820,0.703,821,0.703,822,0.703,823,0.703,824,0.703,825,0.703,826,0.703,827,2.452,828,0.703,830,0.826,854,1.621,861,1.716,864,2.977,865,1.24,866,1.24,867,2.977,868,1.24,869,1.24,870,1.24,871,1.24,872,2.576,873,1.24,874,1.24,875,2.029,876,2.029,877,2.977,878,2.029,879,3.284,880,2.029,881,2.029,882,3.284,883,2.977,884,2.977,885,3.284,886,2.029,887,1.24,888,2.977,889,4.399,890,2.029,891,2.029,892,2.029,893,1.983,894,3.284,895,1.24,896,1.24,897,1.621,898,2.029,899,1.24,900,1.24,901,1.24,902,1.24,903,1.24,904,2.977,905,1.24,906,1.621,907,1.24,908,1.24,909,1.24,910,1.24,911,1.24,912,1.24,913,1.24,914,1.24,915,2.029,916,0.99,917,1.24,918,1.24,919,1.24,920,3.722,921,1.24,922,1.24,923,2.977,924,1.24,925,1.24,926,3.284,927,1.24,928,1.24,929,1.24,930,1.24,931,1.24,932,2.029,933,1.24,934,1.24,935,1.24,936,1.24,937,2.576,938,0.99,939,0.99,940,2.576,941,2.816,942,2.576,943,1.24,944,2.029,945,1.24,946,2.029,947,1.24,948,1.24,949,1.24,950,2.623,951,1.24,952,2.029,953,2.029,954,2.029,955,2.576,956,1.24,957,1.24,958,1.24,959,2.576,960,1.24,961,1.24,962,1.24,963,1.24,964,1.24,965,1.24,966,1.24,967,1.24,968,1.24,969,1.24,970,1.24,971,1.24,972,1.24,973,1.24,974,1.24,975,1.24,976,1.24,977,1.24,978,1.24,979,1.24,980,0.99,981,1.24,982,1.24,983,2.977,984,3.284,985,2.378,986,2.977,987,1.621,988,1.24,989,1.24,990,1.24,991,1.24,992,1.24,993,1.24,994,1.24,995,1.24,996,0.99,997,1.24,998,3.284,999,1.24,1000,1.24,1001,1.24,1002,1.24,1003,2.576,1004,2.973,1005,2.029,1006,2.029,1007,2.029,1008,2.029,1009,2.029,1010,1.24,1011,1.24,1012,1.24,1013,1.24,1014,1.24,1015,3.722,1016,3.722,1017,3.722,1018,1.621,1019,1.24,1020,1.24,1021,2.029,1022,1.24,1023,1.24,1024,1.24,1025,1.24,1026,2.029,1027,1.24,1028,1.24,1029,1.24,1030,1.24,1031,2.576,1032,1.24,1033,1.24,1034,3.526,1035,2.029,1036,1.24,1037,2.029,1038,2.576,1039,1.24,1040,2.029,1041,1.24,1042,1.24,1043,1.24,1044,1.24,1045,1.24,1046,1.24,1047,1.24,1048,1.24,1049,1.24,1050,2.029,1051,1.24,1052,2.576,1053,1.24,1054,1.24,1055,1.24,1056,1.24,1057,1.24,1058,1.24,1059,1.24,1060,1.24,1061,1.24,1062,1.24,1063,1.24,1064,1.24,1065,1.24,1066,2.029,1067,1.24,1068,1.24,1069,1.24,1070,1.24,1071,1.24,1072,1.24,1073,3.284,1074,2.029,1075,2.058,1076,1.24,1077,1.24,1078,1.24,1079,1.24,1080,1.24,1081,2.029,1082,1.24,1083,2.029,1084,1.24,1085,1.24,1086,1.24,1087,1.24,1088,1.24,1089,1.24,1090,0.99,1091,1.24]],["title/license.html",[862,1.795,863,1.795,893,1.497]],["body/license.html",[41,0.046,116,0.046,117,0.046,124,2.44,255,1.34,419,1.16,450,2.16,487,2.925,523,2.44,764,2.44,830,2.44,893,2.44,906,2.925,980,2.925,996,3.797,1004,2.925,1018,3.533,1075,2.925,1090,2.925,1092,4.753,1093,3.661,1094,3.661,1095,3.661,1096,4.423,1097,3.661,1098,3.661,1099,3.661,1100,3.661,1101,3.661,1102,3.661,1103,5.278,1104,3.661,1105,3.661,1106,3.661,1107,3.661,1108,4.423,1109,3.661,1110,3.661,1111,3.661,1112,3.661,1113,3.661,1114,3.661,1115,3.661,1116,3.661,1117,4.423,1118,3.661,1119,3.661,1120,3.661,1121,3.661,1122,3.661,1123,4.423,1124,4.423,1125,3.661,1126,3.661,1127,3.661,1128,3.661,1129,3.661,1130,3.661,1131,3.661,1132,3.661,1133,3.661,1134,3.661,1135,3.661,1136,3.661,1137,3.661,1138,3.661,1139,3.661,1140,3.661,1141,3.661,1142,3.661,1143,3.661,1144,3.661,1145,3.661,1146,3.661,1147,3.661,1148,3.661,1149,3.661]],["title/modules.html",[412,2.409]],["body/modules.html",[41,0.05,116,0.05,117,0.05,411,2.055,412,2.804,815,2.055,897,3.362,1150,4.208,1151,4.208]],["title/overview.html",[1152,2.888]],["body/overview.html",[1,1.923,2,2.192,41,0.056,106,1.224,110,1.923,113,1.923,116,0.048,117,0.048,231,2.591,366,2.574,395,2.192,410,2.574,411,2.621,413,3.649,414,3.086,415,3.086,416,3.086,417,3.649,418,2.574,419,1.224,807,2.192,1152,3.086,1153,3.649]],["title/miscellaneous/variables.html",[855,0.949,1154,2.56]],["body/miscellaneous/variables.html",[8,0.268,9,0.268,33,0.321,40,0.631,41,0.058,47,1.391,48,1.866,50,1.007,80,2.226,85,0.651,91,1.222,116,0.035,117,0.035,127,1.352,145,2.498,231,1.352,232,1.904,233,1.904,234,1.904,268,2.189,281,1.779,336,2.786,339,2.786,366,1.588,388,1.164,450,1.164,451,1.904,463,2.226,464,1.412,478,2.226,479,2.226,480,2.226,481,2.226,482,2.226,483,2.226,500,2.226,503,2.226,512,0.873,551,2.669,580,1.904,685,1.904,691,1.904,700,1.904,732,2.571,761,1.588,769,3.238,784,3.517,785,2.669,837,1.904,841,4.013,842,2.669,845,1.904,849,1.588,850,2.669,851,2.669,852,3.517,855,1.007,859,3.646,861,2.226,916,1.904,938,3.34,939,3.517,941,2.669,950,3.517,985,2.669,987,1.904,1153,1.904,1154,1.904,1155,4.783,1156,2.384,1157,4.686,1158,2.384,1159,2.384,1160,2.384,1161,2.384,1162,2.384,1163,2.384,1164,2.384,1165,2.384,1166,2.384,1167,2.384,1168,2.384,1169,2.384,1170,2.384,1171,2.384,1172,2.384,1173,2.384,1174,3.341,1175,2.384,1176,3.341,1177,2.384,1178,2.384,1179,2.384,1180,2.384,1181,4.403,1182,2.384,1183,2.384,1184,2.384,1185,2.384,1186,2.384,1187,2.384,1188,2.384,1189,2.384,1190,2.384,1191,2.384,1192,2.384,1193,2.384,1194,2.384,1195,2.384,1196,2.384,1197,2.384,1198,2.384,1199,2.384,1200,2.384,1201,2.384,1202,2.384,1203,2.384,1204,2.384,1205,2.384,1206,2.384,1207,2.384,1208,2.384,1209,2.384,1210,2.384,1211,2.384,1212,2.384,1213,2.384,1214,2.384,1215,2.384,1216,2.384,1217,2.384,1218,2.384,1219,2.384,1220,4.686,1221,2.384,1222,3.341,1223,2.384,1224,2.384,1225,3.341,1226,3.341,1227,3.341,1228,2.384,1229,2.384,1230,3.858,1231,2.384,1232,3.341,1233,2.384,1234,2.384,1235,3.341,1236,2.384,1237,3.341,1238,2.384,1239,2.384,1240,2.384,1241,2.384]]],"invertedIndex":[["",{"_index":41,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":268,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.23s",{"_index":274,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["0.27",{"_index":385,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["0.33s",{"_index":269,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["0/1",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":231,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":266,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"coverage.html":{}}}],["100);building",{"_index":1072,"title":{},"body":{"index.html":{}}}],["1000",{"_index":386,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{}}}],["100px",{"_index":355,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["106",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["107",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["109",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["110",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["111",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11px",{"_index":362,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["12",{"_index":374,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["13",{"_index":916,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["13/15",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":370,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["15px",{"_index":363,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["16",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["186",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["187",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["188",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["189",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["190",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["191",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["192",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1s",{"_index":276,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["2",{"_index":366,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0/6.0.0",{"_index":918,"title":{},"body":{"index.html":{}}}],["2/2",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2000",{"_index":348,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{}}}],["2018",{"_index":1093,"title":{},"body":{"license.html":{}}}],["20px",{"_index":359,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["219",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["220",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["221",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["222",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["224",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24px",{"_index":367,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["27",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1153,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["3/3",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":230,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["32",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":845,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["34",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["36",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38",{"_index":232,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"miscellaneous/variables.html":{}}}],["38px",{"_index":368,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["39",{"_index":233,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"miscellaneous/variables.html":{}}}],["3px",{"_index":369,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["4",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4/4",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":234,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"miscellaneous/variables.html":{}}}],["420px",{"_index":351,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["45",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46px",{"_index":372,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["5",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["500",{"_index":338,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["500ms",{"_index":658,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["6",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.3.0",{"_index":912,"title":{},"body":{"index.html":{}}}],["66",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":905,"title":{},"body":{"index.html":{}}}],["7/7",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":364,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["8",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["86",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":373,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["9",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9px",{"_index":371,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["_",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_characterfromevent(event",{"_index":684,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["_closekey",{"_index":287,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["_disabled",{"_index":84,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{}}}],["_ignored",{"_index":528,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["_inverted_shift_map",{"_index":478,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_inverted_shift_map[key",{"_index":745,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["_key",{"_index":277,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["_keycode_map",{"_index":479,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_keycode_map[event.which",{"_index":695,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["_map",{"_index":480,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_map[event.which",{"_index":690,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["_pressed",{"_index":517,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["_sequences",{"_index":514,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["_shift_map",{"_index":481,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_shift_map[key",{"_index":702,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["_shortcuts",{"_index":513,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["_shortcutssub",{"_index":527,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["_special_cases",{"_index":482,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_special_cases[event.which",{"_index":688,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["_special_cases[key",{"_index":736,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["_special_cases[seque[currentlength",{"_index":626,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["above",{"_index":906,"title":{},"body":{"index.html":{},"license.html":{}}}],["absolute",{"_index":384,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["acc",{"_index":551,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"miscellaneous/variables.html":{}}}],["acc.events",{"_index":633,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["acc.events.length",{"_index":615,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["acc.priority",{"_index":549,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["acc.sequences",{"_index":616,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["accepts",{"_index":824,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["access",{"_index":406,"title":{},"body":{"injectables/KeyboardShortcutsHelpService.html":{},"index.html":{}}}],["accessors",{"_index":39,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{}}}],["action",{"_index":1004,"title":{},"body":{"index.html":{},"license.html":{}}}],["actions",{"_index":954,"title":{},"body":{"index.html":{}}}],["active",{"_index":1043,"title":{},"body":{"index.html":{}}}],["actual",{"_index":948,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":115,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{}}}],["add",{"_index":456,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["add(shortcuts",{"_index":457,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["added",{"_index":1057,"title":{},"body":{"index.html":{}}}],["addshortcut(shortcut",{"_index":285,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["affect",{"_index":970,"title":{},"body":{"index.html":{}}}],["afterviewinit",{"_index":27,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"index.html":{}}}],["align",{"_index":343,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["allmodifiers",{"_index":746,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["allmodifiers.some(modifier",{"_index":750,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["allow",{"_index":520,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["allowin",{"_index":130,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["allowin.input",{"_index":142,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{},"index.html":{}}}],["allowin.select",{"_index":141,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{}}}],["allowin.textarea",{"_index":143,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{},"index.html":{}}}],["allpass",{"_index":498,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["allpass(predicates)(event",{"_index":546,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["alone",{"_index":771,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["alphanumeric",{"_index":757,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["alt",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["altkey",{"_index":785,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"miscellaneous/variables.html":{}}}],["and/or",{"_index":1115,"title":{},"body":{"license.html":{}}}],["angular",{"_index":864,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":212,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["angular/common",{"_index":430,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsService.html":{}}}],["angular/core",{"_index":69,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["animate",{"_index":208,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["animations",{"_index":261,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["another",{"_index":668,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["anymore",{"_index":913,"title":{},"body":{"index.html":{}}}],["anything",{"_index":1023,"title":{},"body":{"index.html":{}}}],["api",{"_index":867,"title":{},"body":{"index.html":{}}}],["app",{"_index":20,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"index.html":{}}}],["app.component.css",{"_index":1007,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":998,"title":{},"body":{"index.html":{}}}],["app.component.ts",{"_index":1006,"title":{},"body":{"index.html":{}}}],["app.module",{"_index":1029,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":937,"title":{},"body":{"index.html":{}}}],["applicationref",{"_index":202,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["appmodule",{"_index":932,"title":{},"body":{"index.html":{}}}],["appref",{"_index":299,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["arg",{"_index":613,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["arg.sequences",{"_index":617,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["arising",{"_index":1147,"title":{},"body":{"license.html":{}}}],["array",{"_index":463,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(characters",{"_index":620,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["array.isarray(command",{"_index":653,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["array.isarray(command.key",{"_index":790,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["array.isarray(eventkeys",{"_index":724,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["array.isarray(ids",{"_index":719,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["array.isarray(shortcuts",{"_index":709,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["array.map(prop(property",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.reduce",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asobservable",{"_index":473,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["assist",{"_index":399,"title":{},"body":{"injectables/KeyboardShortcutsHelpService.html":{}}}],["associated",{"_index":1104,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1030,"title":{},"body":{"index.html":{}}}],["authors",{"_index":1139,"title":{},"body":{"license.html":{}}}],["auto",{"_index":357,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["available",{"_index":183,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["b",{"_index":986,"title":{},"body":{"index.html":{}}}],["back",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["background",{"_index":375,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["backspace",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":462,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["before",{"_index":1080,"title":{},"body":{"index.html":{}}}],["beginning",{"_index":667,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["behavior",{"_index":821,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["behaviorsubject",{"_index":485,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["better",{"_index":907,"title":{},"body":{"index.html":{}}}],["between",{"_index":521,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["bezier(0,0,0.3,1",{"_index":271,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["bind",{"_index":14,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"index.html":{}}}],["binding",{"_index":975,"title":{},"body":{"index.html":{}}}],["body",{"_index":1031,"title":{},"body":{"index.html":{}}}],["bodyportalhost",{"_index":297,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["boolean",{"_index":42,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["boolean(shortcut.description",{"_index":404,"title":{},"body":{"injectables/KeyboardShortcutsHelpService.html":{}}}],["boolean(shortcut.label",{"_index":403,"title":{},"body":{"injectables/KeyboardShortcutsHelpService.html":{}}}],["bootstrap",{"_index":936,"title":{},"body":{"index.html":{}}}],["both",{"_index":645,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["bottom",{"_index":340,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["box",{"_index":360,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["browse",{"_index":1151,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":815,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{},"modules.html":{}}}],["browseranimationsmodule",{"_index":1028,"title":{},"body":{"index.html":{}}}],["browsermodule",{"_index":934,"title":{},"body":{"index.html":{}}}],["bug",{"_index":567,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["bugs",{"_index":901,"title":{},"body":{"index.html":{}}}],["build",{"_index":1052,"title":{},"body":{"index.html":{}}}],["build:prod",{"_index":1074,"title":{},"body":{"index.html":{}}}],["building",{"_index":887,"title":{},"body":{"index.html":{}}}],["built",{"_index":1053,"title":{},"body":{"index.html":{}}}],["button",{"_index":559,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["c",{"_index":764,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{},"license.html":{}}}],["calc(100",{"_index":354,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["callback",{"_index":246,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["called",{"_index":811,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["can't",{"_index":964,"title":{},"body":{"index.html":{}}}],["capitalize",{"_index":379,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["capslock",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capture",{"_index":579,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["case",{"_index":641,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["cases",{"_index":774,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["catcherror",{"_index":491,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["catcherror(error",{"_index":600,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["center",{"_index":345,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["certain",{"_index":958,"title":{},"body":{"index.html":{}}}],["chance",{"_index":662,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["change",{"_index":1076,"title":{},"body":{"index.html":{}}}],["changes",{"_index":144,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{}}}],["changes.shortcuts",{"_index":99,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{}}}],["changes.shortcuts.currentvalue",{"_index":100,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{}}}],["changes.since",{"_index":1056,"title":{},"body":{"index.html":{}}}],["char",{"_index":758,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["charachater",{"_index":949,"title":{},"body":{"index.html":{}}}],["characterfromevent(event",{"_index":699,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["characters",{"_index":618,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["characters.some",{"_index":625,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["characters.some(char",{"_index":782,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["charge",{"_index":1100,"title":{},"body":{"license.html":{}}}],["check",{"_index":198,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["child",{"_index":933,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1142,"title":{},"body":{"license.html":{}}}],["class",{"_index":77,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["classname",{"_index":158,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["clean",{"_index":79,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{}}}],["cleanup",{"_index":465,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["clearid",{"_index":133,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{}}}],["clearids",{"_index":83,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{}}}],["cleartimeout(this.timeoutid",{"_index":318,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["click",{"_index":558,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["clicked",{"_index":770,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["clicking",{"_index":768,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["clicks",{"_index":578,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["close",{"_index":178,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["closekey",{"_index":163,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["closekey(value",{"_index":288,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["closekeydescription",{"_index":164,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["closekeyids",{"_index":322,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["closekeylabel",{"_index":165,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["closing",{"_index":1036,"title":{},"body":{"index.html":{}}}],["cluster_keyboardshortcutsmodule",{"_index":414,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{},"overview.html":{}}}],["cluster_keyboardshortcutsmodule_declarations",{"_index":416,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{},"overview.html":{}}}],["cluster_keyboardshortcutsmodule_exports",{"_index":415,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{},"overview.html":{}}}],["cmd",{"_index":950,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["code",{"_index":984,"title":{},"body":{"index.html":{}}}],["color",{"_index":392,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["combination",{"_index":945,"title":{},"body":{"index.html":{}}}],["combinations",{"_index":882,"title":{},"body":{"index.html":{}}}],["command",{"_index":281,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["command(event",{"_index":809,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["command.allowin",{"_index":801,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["command.filter(command",{"_index":670,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["command.fullmatch",{"_index":673,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["command.fullmatch)[0",{"_index":671,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["command.id",{"_index":718,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["command.issequence",{"_index":713,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["command.key",{"_index":791,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["command.sequence.some(sequence",{"_index":676,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["command.throttletime",{"_index":805,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["commands",{"_index":710,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["commands.foreach(command",{"_index":712,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["commands.map(command",{"_index":717,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["commented",{"_index":565,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["commonmodule",{"_index":429,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{}}}],["complete",{"_index":663,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{}},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"coverage.html":{},"index.html":{}}}],["component)provides",{"_index":1054,"title":{},"body":{"index.html":{}}}],["component_template",{"_index":108,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{}}}],["componentfactoryresolver",{"_index":203,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{},"overview.html":{}}}],["components/directive",{"_index":868,"title":{},"body":{"index.html":{}}}],["components/help/help.component",{"_index":437,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{}}}],["components/help/item/item.component",{"_index":439,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{}}}],["components/keyboard",{"_index":435,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{}}}],["conditions",{"_index":1122,"title":{},"body":{"license.html":{}}}],["confused",{"_index":961,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1148,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":982,"title":{},"body":{"index.html":{}}}],["console.log(\"command",{"_index":951,"title":{},"body":{"index.html":{}}}],["console.log(\"control",{"_index":952,"title":{},"body":{"index.html":{}}}],["console.log(\"konami",{"_index":988,"title":{},"body":{"index.html":{}}}],["console.log('directive",{"_index":1047,"title":{},"body":{"index.html":{}}}],["console.log(e",{"_index":1026,"title":{},"body":{"index.html":{}}}],["console.log(this.shortcutlog",{"_index":1017,"title":{},"body":{"index.html":{}}}],["const",{"_index":145,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":298,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsSelectService.html":{}}}],["constructor(@inject(document",{"_index":679,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["constructor(keyboardservice",{"_index":443,"title":{},"body":{"injectables/KeyboardShortcutsSelectService.html":{}}}],["constructor(private",{"_index":94,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsSelectService.html":{}}}],["content",{"_index":347,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["contents",{"_index":875,"title":{},"body":{"index.html":{}}}],["continue",{"_index":756,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["contract",{"_index":1145,"title":{},"body":{"license.html":{}}}],["control",{"_index":732,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["copies",{"_index":1117,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1018,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1092,"title":{},"body":{"license.html":{}}}],["counter",{"_index":968,"title":{},"body":{"index.html":{}}}],["cover",{"_index":776,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["coverage",{"_index":829,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":510,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["ctl",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctrl",{"_index":769,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ctrlkey",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctrlkey\"].some(mod",{"_index":786,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["cubic",{"_index":270,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["curr",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentlength",{"_index":614,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["currentvalue",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["custom",{"_index":400,"title":{},"body":{"injectables/KeyboardShortcutsHelpService.html":{},"index.html":{}}}],["cut",{"_index":1014,"title":{},"body":{"index.html":{}}}],["damages",{"_index":1143,"title":{},"body":{"license.html":{}}}],["data",{"_index":1060,"title":{},"body":{"index.html":{}}}],["deal",{"_index":1106,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1149,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":979,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":422,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{},"index.html":{}}}],["declarative",{"_index":866,"title":{},"body":{"index.html":{}}}],["declared",{"_index":453,"title":{},"body":{"injectables/KeyboardShortcutsSelectService.html":{},"index.html":{}}}],["default",{"_index":47,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":43,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"index.html":{}}}],["del",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["delay",{"_index":665,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["delay(only",{"_index":969,"title":{},"body":{"index.html":{}}}],["demo",{"_index":872,"title":{},"body":{"index.html":{}}}],["democomponent",{"_index":1044,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":413,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{},"overview.html":{}}}],["dependency",{"_index":891,"title":{},"body":{"index.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["descriptions",{"_index":991,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":529,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["details",{"_index":1091,"title":{},"body":{"index.html":{}}}],["determine",{"_index":643,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["developer",{"_index":876,"title":{},"body":{"index.html":{}}}],["difference",{"_index":499,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["difference(this._ignored",{"_index":536,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["directive",{"_index":106,"title":{"directives/KeyboardShortcutsDirective.html":{}},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"interfaces/Shortcut.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives",{"_index":112,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["disable",{"_index":45,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["disabled",{"_index":38,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["disabled(value",{"_index":87,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{}}}],["disablescroll",{"_index":250,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["disablescroll(`.${this.classname",{"_index":308,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["disablescrolling",{"_index":166,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["display",{"_index":341,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["dist",{"_index":1082,"title":{},"body":{"index.html":{}}}],["dist/ng",{"_index":1078,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":213,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["distribute",{"_index":1113,"title":{},"body":{"license.html":{}}}],["document",{"_index":505,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["document.body",{"_index":303,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["documentation",{"_index":830,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{}}}],["dommousescroll",{"_index":249,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["domportaloutlet",{"_index":220,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["down",{"_index":985,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["duplicated",{"_index":886,"title":{},"body":{"index.html":{}}}],["during",{"_index":1058,"title":{},"body":{"index.html":{}}}],["e",{"_index":236,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["e.event.defaultprevented",{"_index":574,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["e.key",{"_index":1016,"title":{},"body":{"index.html":{}}}],["e.preventdefault",{"_index":239,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{}}}],["e.returnvalue",{"_index":240,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["e.stoppropagation",{"_index":577,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["e.target.closest(ignore",{"_index":237,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["each",{"_index":509,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["edge",{"_index":773,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["edit",{"_index":873,"title":{},"body":{"index.html":{}}}],["egoistdeveloper/ng",{"_index":920,"title":{},"body":{"index.html":{}}}],["el",{"_index":136,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{}}}],["element",{"_index":23,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["elementref",{"_index":129,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["elements",{"_index":121,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{},"index.html":{}}}],["emit",{"_index":56,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{}}}],["emptymessage",{"_index":167,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["enablescroll",{"_index":257,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["end",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enter",{"_index":987,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["enum",{"_index":825,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["enumerations",{"_index":856,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equivelents",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["esc",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["escape",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["etc",{"_index":940,"title":{},"body":{"index.html":{}}}],["event",{"_index":255,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{},"license.html":{}}}],["event.callback",{"_index":259,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["event.key",{"_index":621,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["event.keycode",{"_index":687,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["event.shiftkey",{"_index":689,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["event.which",{"_index":686,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["event['ctrlkey",{"_index":734,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["event[mod",{"_index":787,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["event[modifier",{"_index":751,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["event[modifiers[key",{"_index":738,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["eventkey",{"_index":726,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["eventkeys",{"_index":723,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["eventkeys.find(eventkey",{"_index":725,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["events",{"_index":388,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["events.length",{"_index":678,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["example",{"_index":654,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["examples",{"_index":883,"title":{},"body":{"index.html":{}}}],["execution",{"_index":977,"title":{},"body":{"index.html":{}}}],["export",{"_index":76,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["exports",{"_index":423,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{}}}],["express",{"_index":1130,"title":{},"body":{"license.html":{}}}],["extends",{"_index":818,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["f",{"_index":1021,"title":{},"body":{"index.html":{}}}],["f\").subscribe(e",{"_index":1049,"title":{},"body":{"index.html":{}}}],["f').subscribe((e",{"_index":1025,"title":{},"body":{"index.html":{}}}],["f1",{"_index":1001,"title":{},"body":{"index.html":{}}}],["f2",{"_index":1000,"title":{},"body":{"index.html":{}}}],["f7",{"_index":1022,"title":{},"body":{"index.html":{}}}],["false",{"_index":85,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fff",{"_index":376,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":1105,"title":{},"body":{"license.html":{}}}],["filter",{"_index":449,"title":{},"body":{"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{}}}],["filter((shortcut",{"_index":586,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["filter(_",{"_index":583,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["filter(e",{"_index":573,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["filter(identity",{"_index":797,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["filter(identity).length",{"_index":794,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["filter(key",{"_index":731,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["filter(sequences",{"_index":634,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["filter(shortcut",{"_index":402,"title":{},"body":{"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsService.html":{}}}],["filter(this.isallowed",{"_index":588,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["filtered",{"_index":447,"title":{},"body":{"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{}}}],["find",{"_index":778,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["fire",{"_index":813,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{}}}],["fired",{"_index":767,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{}}}],["firefox",{"_index":556,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["first",{"_index":492,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["fitness",{"_index":1135,"title":{},"body":{"license.html":{}}}],["fix",{"_index":899,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":334,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["fixes",{"_index":555,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["flex",{"_index":342,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["fn",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["focus",{"_index":128,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["focusable",{"_index":120,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{},"index.html":{}}}],["folder",{"_index":1083,"title":{},"body":{"index.html":{}}}],["following",{"_index":1121,"title":{},"body":{"license.html":{}}}],["forked",{"_index":895,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":425,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{}}}],["free",{"_index":1099,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":486,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["fromevent(this.document",{"_index":554,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["full",{"_index":664,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["full/path/to/x",{"_index":1085,"title":{},"body":{"index.html":{}}}],["fullmatch",{"_index":631,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["function",{"_index":512,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":858,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1120,"title":{},"body":{"license.html":{}}}],["g",{"_index":955,"title":{},"body":{"index.html":{}}}],["getkeys",{"_index":728,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["getting",{"_index":862,"title":{"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":661,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["gives",{"_index":972,"title":{},"body":{"index.html":{}}}],["global",{"_index":15,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{}}}],["globally",{"_index":1063,"title":{},"body":{"index.html":{}}}],["gmail",{"_index":953,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1098,"title":{},"body":{"license.html":{}}}],["group",{"_index":177,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["groupby",{"_index":226,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["groupby(shortcuts",{"_index":327,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["grouping",{"_index":814,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["guess",{"_index":648,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["guess.fullmatch",{"_index":651,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["guid",{"_index":507,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["handle",{"_index":640,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["handler",{"_index":962,"title":{},"body":{"index.html":{}}}],["hasmodifiers",{"_index":749,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["height",{"_index":353,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["hello",{"_index":1040,"title":{},"body":{"index.html":{}}}],["help",{"_index":111,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["help.component.css",{"_index":154,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["help.component.html",{"_index":156,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["help.service",{"_index":219,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"modules/KeyboardShortcutsModule.html":{}}}],["help.service.ts",{"_index":397,"title":{},"body":{"injectables/KeyboardShortcutsHelpService.html":{},"coverage.html":{}}}],["help.service.ts:22",{"_index":405,"title":{},"body":{"injectables/KeyboardShortcutsHelpService.html":{}}}],["here",{"_index":563,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["hereby",{"_index":1097,"title":{},"body":{"license.html":{}}}],["hide",{"_index":159,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["highlight",{"_index":391,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["hit",{"_index":657,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["holders",{"_index":1140,"title":{},"body":{"license.html":{}}}],["home",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hopefully",{"_index":775,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["html",{"_index":105,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{}}}],["htmlelement",{"_index":533,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["https://bugzilla.mozilla.org/show_bug.cgi?id=1487102",{"_index":568,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["https://github.com/omridevk/ng",{"_index":570,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["i.e",{"_index":763,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["id",{"_index":802,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{}}}],["identifier",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":500,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":466,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["ids.includes(shortcut.id",{"_index":721,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["idx",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ignore",{"_index":78,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{}}}],["ignored",{"_index":819,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["implements",{"_index":25,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["implied",{"_index":1131,"title":{},"body":{"license.html":{}}}],["import",{"_index":66,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["important",{"_index":884,"title":{},"body":{"index.html":{}}}],["importings",{"_index":922,"title":{},"body":{"index.html":{}}}],["imports",{"_index":440,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{},"index.html":{}}}],["included",{"_index":1125,"title":{},"body":{"license.html":{}}}],["including",{"_index":1108,"title":{},"body":{"license.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{}}}],["inject",{"_index":477,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["injectable",{"_index":394,"title":{"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{}},"body":{"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"coverage.html":{}}}],["injectables",{"_index":395,"title":{},"body":{"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"overview.html":{}}}],["injector",{"_index":204,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["input",{"_index":67,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["inputs",{"_index":37,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["ins",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inshiftmap",{"_index":744,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["inside",{"_index":995,"title":{},"body":{"index.html":{}}}],["install",{"_index":879,"title":{},"body":{"index.html":{}}}],["installkeybindings",{"_index":1012,"title":{},"body":{"index.html":{}}}],["instead",{"_index":471,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["interface",{"_index":806,"title":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{}},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":807,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"overview.html":{}}}],["invert",{"_index":850,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["invert(_shift_map",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isallowed",{"_index":531,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["isfullmatch",{"_index":675,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["isfunction",{"_index":501,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isfunction(shortcut.command",{"_index":587,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["isfunction(x",{"_index":860,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ismac",{"_index":841,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isnill",{"_index":502,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["isnill(command.throttletime",{"_index":803,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["isnonalpha",{"_index":741,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["issequence",{"_index":798,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{}}}],["issequence(shortcuts",{"_index":705,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["issue",{"_index":561,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["isupper",{"_index":739,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["item",{"_index":377,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["items",{"_index":344,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["justify",{"_index":346,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["katz",{"_index":1095,"title":{},"body":{"license.html":{}}}],["keeping",{"_index":562,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["key",{"_index":54,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["key(value",{"_index":278,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["key.split",{"_index":793,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["key.touppercase",{"_index":740,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["key.trim",{"_index":730,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["keyboard",{"_index":9,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["keyboardevent",{"_index":826,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["keyboardhelp",{"_index":300,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["keyboards",{"_index":451,"title":{},"body":{"injectables/KeyboardShortcutsSelectService.html":{},"miscellaneous/variables.html":{}}}],["keyboardservice",{"_index":445,"title":{},"body":{"injectables/KeyboardShortcutsSelectService.html":{}}}],["keyboardshortcuts",{"_index":1010,"title":{},"body":{"index.html":{}}}],["keyboardshortcutscomponent",{"_index":1,"title":{"components/KeyboardShortcutsComponent.html":{}},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"modules/KeyboardShortcutsModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["keyboardshortcutsdirective",{"_index":113,"title":{"directives/KeyboardShortcutsDirective.html":{}},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"modules/KeyboardShortcutsModule.html":{},"coverage.html":{},"overview.html":{}}}],["keyboardshortcutshelpcomponent",{"_index":110,"title":{"components/KeyboardShortcutsHelpComponent.html":{}},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"modules/KeyboardShortcutsModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["keyboardshortcutshelpitemcomponent",{"_index":438,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{}}}],["keyboardshortcutshelpservice",{"_index":217,"title":{"injectables/KeyboardShortcutsHelpService.html":{}},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"modules/KeyboardShortcutsModule.html":{},"coverage.html":{},"index.html":{}}}],["keyboardshortcutsmodule",{"_index":411,"title":{"modules/KeyboardShortcutsModule.html":{}},"body":{"modules/KeyboardShortcutsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["keyboardshortcutsmodule.forroot",{"_index":935,"title":{},"body":{"index.html":{}}}],["keyboardshortcutsselectservice",{"_index":431,"title":{"injectables/KeyboardShortcutsSelectService.html":{}},"body":{"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"coverage.html":{},"index.html":{}}}],["keyboardshortcutsservice",{"_index":70,"title":{"injectables/KeyboardShortcutsService.html":{}},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"coverage.html":{}}}],["keycode",{"_index":735,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["keydescription",{"_index":168,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["keydown",{"_index":553,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["keydowncombo",{"_index":581,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["keydownsequence",{"_index":606,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["keylabel",{"_index":169,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["keypad",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keypress",{"_index":515,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["keys",{"_index":464,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["keys.length",{"_index":781,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["keys.map(key",{"_index":795,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["keyup",{"_index":580,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1129,"title":{},"body":{"license.html":{}}}],["known",{"_index":900,"title":{},"body":{"index.html":{}}}],["konami",{"_index":983,"title":{},"body":{"index.html":{}}}],["label",{"_index":175,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["labels",{"_index":296,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["left",{"_index":339,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":104,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{}}}],["length",{"_index":762,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["letters",{"_index":755,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["liability",{"_index":1144,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1141,"title":{},"body":{"license.html":{}}}],["library",{"_index":959,"title":{},"body":{"index.html":{}}}],["license",{"_index":893,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":1088,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":1059,"title":{},"body":{"index.html":{}}}],["lifecycles",{"_index":1069,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1109,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1132,"title":{},"body":{"license.html":{}}}],["list",{"_index":50,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["listed",{"_index":992,"title":{},"body":{"index.html":{}}}],["listen",{"_index":55,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["live",{"_index":871,"title":{},"body":{"index.html":{}}}],["loaded",{"_index":1065,"title":{},"body":{"index.html":{}}}],["loading",{"_index":890,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":892,"title":{},"body":{"index.html":{}}}],["logic",{"_index":1068,"title":{},"body":{"index.html":{}}}],["login",{"_index":1079,"title":{},"body":{"index.html":{}}}],["longer",{"_index":647,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["look",{"_index":733,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["lower",{"_index":696,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["magic",{"_index":1087,"title":{},"body":{"index.html":{}}}],["make",{"_index":753,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["manage",{"_index":869,"title":{},"body":{"index.html":{}}}],["management",{"_index":909,"title":{},"body":{"index.html":{}}}],["manually",{"_index":194,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["map",{"_index":214,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsService.html":{}}}],["map(event",{"_index":610,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["map(key",{"_index":729,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["map(sequence",{"_index":623,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["map(shortcut",{"_index":542,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["map(shortcuts",{"_index":326,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsService.html":{}}}],["map(this.mapevent",{"_index":585,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["mapevent",{"_index":539,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["mapping",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maps",{"_index":693,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["margin",{"_index":381,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["match",{"_index":637,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["match.fullmatch",{"_index":652,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["matching",{"_index":117,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.max(...keys.map(key",{"_index":792,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["math[type].apply(math",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["max",{"_index":352,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["maxarrayprop",{"_index":503,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxarrayprop(\"priority",{"_index":649,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["memory",{"_index":908,"title":{},"body":{"index.html":{}}}],["menu",{"_index":173,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["merchantability",{"_index":1134,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1112,"title":{},"body":{"license.html":{}}}],["message",{"_index":185,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["meta",{"_index":938,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":30,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{}}}],["metakey",{"_index":784,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"miscellaneous/variables.html":{}}}],["metaright",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":1070,"title":{},"body":{"index.html":{}}}],["methods",{"_index":34,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"index.html":{}}}],["migrating",{"_index":878,"title":{},"body":{"index.html":{}}}],["min",{"_index":349,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["minimum",{"_index":911,"title":{},"body":{"index.html":{}}}],["minmaxarrayprop",{"_index":851,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":855,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1090,"title":{},"body":{"index.html":{},"license.html":{}}}],["modal",{"_index":152,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["modal__backdrop",{"_index":383,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["modal__container",{"_index":332,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["modal__list",{"_index":382,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["models/key",{"_index":484,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["models/shortcut",{"_index":131,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{},"injectables/KeyboardShortcutsService.html":{}}}],["modifiers",{"_index":483,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modifiers.hasownproperty(key",{"_index":737,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["modifiers[key",{"_index":748,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["modifierson(event",{"_index":783,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["modify",{"_index":1111,"title":{},"body":{"license.html":{}}}],["module",{"_index":410,"title":{"modules/KeyboardShortcutsModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":412,"title":{"modules.html":{}},"body":{"modules/KeyboardShortcutsModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":427,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{}}}],["more",{"_index":974,"title":{},"body":{"index.html":{}}}],["ms",{"_index":518,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["much",{"_index":816,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["multiple",{"_index":18,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"index.html":{}}}],["name",{"_index":60,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":823,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["navigator",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["navigator.useragent.includes(\"mac",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":642,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["needed",{"_index":694,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["new",{"_index":229,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"coverage.html":{},"index.html":{}}}],["new_obj",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new_obj[obj[prop",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":32,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":97,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"index.html":{}}}],["ngdestroy",{"_index":81,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{}}}],["ngkeyboardshortcuts",{"_index":114,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["ngkeyboardshortcuts.currentvalue",{"_index":146,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{}}}],["ngmodule",{"_index":428,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{},"index.html":{}}}],["ngonchanges(changes",{"_index":98,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{}}}],["ngondestroy",{"_index":103,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{}}}],["ngoninit",{"_index":95,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{}}}],["node",{"_index":822,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["non",{"_index":691,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":1034,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1138,"title":{},"body":{"license.html":{}}}],["note",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notes",{"_index":877,"title":{},"body":{"index.html":{}}}],["notice",{"_index":1123,"title":{},"body":{"license.html":{}}}],["now",{"_index":564,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["npm",{"_index":889,"title":{},"body":{"index.html":{}}}],["null",{"_index":247,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["number",{"_index":506,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["o",{"_index":956,"title":{},"body":{"index.html":{}}}],["obj",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.hasownproperty(prop",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.assign",{"_index":543,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["object.keys(modifiers).map(key",{"_index":747,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["object.keys(shortcuts",{"_index":331,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["object[prop",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":63,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["obtaining",{"_index":1102,"title":{},"body":{"license.html":{}}}],["occur",{"_index":660,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["occurs",{"_index":666,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["older",{"_index":917,"title":{},"body":{"index.html":{}}}],["omri",{"_index":1094,"title":{},"body":{"license.html":{}}}],["omridevk/ng",{"_index":896,"title":{},"body":{"index.html":{}}}],["onchanges",{"_index":28,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{}}}],["ondestroy",{"_index":29,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{}}}],["one",{"_index":644,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["oninit",{"_index":26,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["opacity",{"_index":267,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["open",{"_index":182,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["opened",{"_index":1037,"title":{},"body":{"index.html":{}}}],["option",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":61,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutInput.html":{},"miscellaneous/functions.html":{}}}],["os",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["others",{"_index":759,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["otherwise",{"_index":523,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{},"license.html":{}}}],["out",{"_index":419,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outlet",{"_index":223,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["output",{"_index":827,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["overflow",{"_index":356,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["override",{"_index":820,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["overview",{"_index":1152,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":923,"title":{},"body":{"index.html":{}}}],["padding",{"_index":358,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["page",{"_index":186,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["pagedown",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pageup",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":93,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["parameters",{"_index":59,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"miscellaneous/functions.html":{}}}],["parse",{"_index":788,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["parsecommand(command",{"_index":789,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["parsed",{"_index":508,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["parsedshortcut",{"_index":490,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{}}}],["partialmatch",{"_index":628,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["particular",{"_index":1136,"title":{},"body":{"license.html":{}}}],["passive",{"_index":254,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["paste",{"_index":1020,"title":{},"body":{"index.html":{}}}],["perform",{"_index":957,"title":{},"body":{"index.html":{}}}],["performance",{"_index":971,"title":{},"body":{"index.html":{}}}],["permission",{"_index":1096,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1118,"title":{},"body":{"license.html":{}}}],["person",{"_index":1101,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1119,"title":{},"body":{"license.html":{}}}],["pick",{"_index":646,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["pipe",{"_index":325,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["pipe(filter(shortcuts",{"_index":474,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["pipe(switchmap",{"_index":604,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["placed",{"_index":1032,"title":{},"body":{"index.html":{}}}],["please",{"_index":919,"title":{},"body":{"index.html":{}}}],["plus",{"_index":941,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["pointer",{"_index":387,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["portal",{"_index":222,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["portions",{"_index":1127,"title":{},"body":{"license.html":{}}}],["position",{"_index":333,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["predicate",{"_index":511,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["predicates",{"_index":544,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{}}}],["preferably",{"_index":1033,"title":{},"body":{"index.html":{}}}],["press",{"_index":999,"title":{},"body":{"index.html":{}}}],["pressed",{"_index":58,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["pressing",{"_index":967,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":557,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["preventdefault",{"_index":235,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["preventdefault(e",{"_index":243,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["preventdefault(ignore",{"_index":252,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["preventdefaultforscrollkeys",{"_index":241,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["previous",{"_index":910,"title":{},"body":{"index.html":{}}}],["previousvalue",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["priority",{"_index":552,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{}}}],["private",{"_index":82,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["probably",{"_index":1067,"title":{},"body":{"index.html":{}}}],["programmatically",{"_index":1038,"title":{},"body":{"index.html":{}}}],["project",{"_index":894,"title":{},"body":{"index.html":{}}}],["projects/.../common.ts",{"_index":859,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../key.ts",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../shortcut.ts",{"_index":857,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/ng",{"_index":8,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prop",{"_index":852,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prop(property",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":157,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["property",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propfn",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propfn(acc",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propfn(curr",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":174,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{}}}],["provided",{"_index":980,"title":{},"body":{"index.html":{},"license.html":{}}}],["providedin",{"_index":408,"title":{},"body":{"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{}}}],["providers",{"_index":441,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{}}}],["provides",{"_index":865,"title":{},"body":{"index.html":{}}}],["public",{"_index":35,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["publish",{"_index":1075,"title":{},"body":{"index.html":{},"license.html":{}}}],["publishing",{"_index":888,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1137,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":525,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["rebuild",{"_index":1086,"title":{},"body":{"index.html":{}}}],["recommending",{"_index":902,"title":{},"body":{"index.html":{}}}],["reduce((acc",{"_index":548,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["reference",{"_index":566,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["registered",{"_index":22,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["reliably",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remove",{"_index":21,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["remove(ids",{"_index":460,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["removed",{"_index":24,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"index.html":{}}}],["render",{"_index":1051,"title":{},"body":{"index.html":{}}}],["rendering",{"_index":812,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["repeat",{"_index":493,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["replace",{"_index":921,"title":{},"body":{"index.html":{}}}],["repo",{"_index":569,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["require",{"_index":761,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reserved",{"_index":1002,"title":{},"body":{"index.html":{}}}],["reset",{"_index":418,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsService.html":{},"overview.html":{}}}],["resetcounter",{"_index":602,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["restriction",{"_index":1107,"title":{},"body":{"license.html":{}}}],["result",{"_index":622,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["result.length",{"_index":650,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["results",{"_index":116,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":91,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":62,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"miscellaneous/functions.html":{}}}],["reveal",{"_index":160,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["rgba(0",{"_index":365,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["right",{"_index":336,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rights",{"_index":1110,"title":{},"body":{"license.html":{}}}],["root",{"_index":409,"title":{},"body":{"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["run",{"_index":1073,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":74,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["rxjs/operators",{"_index":215,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsService.html":{}}}],["same",{"_index":944,"title":{},"body":{"index.html":{}}}],["save",{"_index":926,"title":{},"body":{"index.html":{}}}],["scalable",{"_index":870,"title":{},"body":{"index.html":{}}}],["scan",{"_index":494,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["screen",{"_index":189,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"index.html":{}}}],["scrollablekeys",{"_index":228,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["scrollablekeys.has(e.keycode",{"_index":242,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["scrollevents",{"_index":244,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["scrollevents.map(event",{"_index":251,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["scrolling",{"_index":181,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["see",{"_index":560,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["select",{"_index":36,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["select(key",{"_index":51,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{}}}],["select.service",{"_index":432,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{}}}],["select.service.ts",{"_index":442,"title":{},"body":{"injectables/KeyboardShortcutsSelectService.html":{},"coverage.html":{}}}],["select.service.ts:11",{"_index":444,"title":{},"body":{"injectables/KeyboardShortcutsSelectService.html":{}}}],["select.service.ts:18",{"_index":446,"title":{},"body":{"injectables/KeyboardShortcutsSelectService.html":{}}}],["selected",{"_index":57,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{}}}],["selector",{"_index":31,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["sell",{"_index":1116,"title":{},"body":{"license.html":{}}}],["separator",{"_index":943,"title":{},"body":{"index.html":{}}}],["seperator",{"_index":947,"title":{},"body":{"index.html":{}}}],["seque[currentlength",{"_index":627,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["sequence",{"_index":524,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["sequence.fullmatch",{"_index":630,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["sequence.length",{"_index":677,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["sequence.sequence.filter(seque",{"_index":624,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["sequences",{"_index":522,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["sequences.fullmatch",{"_index":636,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["sequences.length",{"_index":629,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["sequences.partialmatch",{"_index":635,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["service",{"_index":398,"title":{},"body":{"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"index.html":{}}}],["services/shortcut.service",{"_index":132,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{}}}],["set",{"_index":86,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{}}}],["setclosekey(value",{"_index":201,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["setdisabled(value",{"_index":64,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{}}}],["setkey(value",{"_index":200,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["settimeout",{"_index":101,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["shadow",{"_index":361,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["shall",{"_index":1124,"title":{},"body":{"license.html":{}}}],["shared/directives/keyboard",{"_index":433,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{}}}],["shared/models/portal",{"_index":225,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["shared/models/shortcut",{"_index":73,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{}}}],["shared/services/shortcut",{"_index":218,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"modules/KeyboardShortcutsModule.html":{}}}],["shared/services/shortcut.service",{"_index":71,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"modules/KeyboardShortcutsModule.html":{}}}],["shared/utils/common",{"_index":227,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["shared/utils/dom",{"_index":221,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["shift",{"_index":939,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["shiftkey",{"_index":700,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"miscellaneous/variables.html":{}}}],["shortcut",{"_index":125,"title":{"interfaces/Shortcut.html":{}},"body":{"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"coverage.html":{},"index.html":{}}}],["shortcut.allowin).includes(target.nodename",{"_index":537,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcut.allowin.length",{"_index":535,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcut.command",{"_index":595,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcut.event",{"_index":596,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcut.event.preventdefault",{"_index":591,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcut.event.stoppropagation",{"_index":592,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcut.event.target",{"_index":532,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcut.includes",{"_index":707,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcut.issequence",{"_index":541,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcut.key",{"_index":597,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcut.length",{"_index":708,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcut.predicates",{"_index":547,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcut.predicates.map((predicates",{"_index":545,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcut.preventdefault",{"_index":590,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcut.priority",{"_index":550,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcut.service",{"_index":407,"title":{},"body":{"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsSelectService.html":{}}}],["shortcut.target",{"_index":534,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcut/s",{"_index":459,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcuteventoutput",{"_index":72,"title":{"interfaces/ShortcutEventOutput.html":{}},"body":{"components/KeyboardShortcutsComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"coverage.html":{},"index.html":{}}}],["shortcutinput",{"_index":46,"title":{"interfaces/ShortcutInput.html":{}},"body":{"components/KeyboardShortcutsComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"coverage.html":{},"index.html":{}}}],["shortcutlog",{"_index":1003,"title":{},"body":{"index.html":{}}}],["shortcuts",{"_index":16,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["shortcuts'},{'name",{"_index":109,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{}}}],["shortcuts.component",{"_index":436,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{}}}],["shortcuts.component.ts",{"_index":12,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"coverage.html":{}}}],["shortcuts.component.ts:26",{"_index":49,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{}}}],["shortcuts.component.ts:43",{"_index":44,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{}}}],["shortcuts.component.ts:72",{"_index":53,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{}}}],["shortcuts.directive",{"_index":434,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{}}}],["shortcuts.directive.ts",{"_index":119,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{},"coverage.html":{}}}],["shortcuts.directive.ts:22",{"_index":126,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{}}}],["shortcuts.directive.ts:34",{"_index":123,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{}}}],["shortcuts.filter(shortcut",{"_index":608,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcuts.length",{"_index":475,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcuts.map(shortcut",{"_index":138,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{}}}],["shortcuts.module.ts",{"_index":421,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{}}}],["shortcuts.module.ts:28",{"_index":426,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{}}}],["shortcuts.some(shortcut",{"_index":706,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcuts/issues/35",{"_index":571,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcuts/keyboard",{"_index":11,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"modules/KeyboardShortcutsModule.html":{},"coverage.html":{}}}],["shortcuts/package.json",{"_index":1077,"title":{},"body":{"index.html":{}}}],["shortcuts/src/lib/components/help/help.component.ts",{"_index":149,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"coverage.html":{}}}],["shortcuts/src/lib/components/help/help.component.ts:190",{"_index":180,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["shortcuts/src/lib/components/help/help.component.ts:196",{"_index":199,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["shortcuts/src/lib/components/help/help.component.ts:203",{"_index":190,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["shortcuts/src/lib/components/help/help.component.ts:210",{"_index":191,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["shortcuts/src/lib/components/help/help.component.ts:217",{"_index":176,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["shortcuts/src/lib/components/help/help.component.ts:224",{"_index":172,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["shortcuts/src/lib/components/help/help.component.ts:230",{"_index":187,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["shortcuts/src/lib/components/help/help.component.ts:257",{"_index":171,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["shortcuts/src/lib/components/help/help.component.ts:281",{"_index":192,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["shortcuts/src/lib/components/help/help.component.ts:287",{"_index":184,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["shortcuts/src/lib/components/help/help.component.ts:341",{"_index":195,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["shortcuts/src/lib/components/help/help.component.ts:359",{"_index":197,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["shortcuts/src/lib/components/help/help.component.ts:366",{"_index":193,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["shortcuts/src/lib/components/help/help.component.ts:407",{"_index":196,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["shortcuts/src/lib/components/keyboard",{"_index":10,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"coverage.html":{}}}],["shortcuts/src/lib/ng",{"_index":420,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{}}}],["shortcuts/src/lib/shared/directives/keyboard",{"_index":118,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{},"coverage.html":{}}}],["shortcuts/src/lib/shared/models/key.ts",{"_index":837,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["shortcuts/src/lib/shared/models/shortcut.ts",{"_index":808,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["shortcuts/src/lib/shared/models/shortcut.ts:14",{"_index":810,"title":{},"body":{"interfaces/Shortcut.html":{}}}],["shortcuts/src/lib/shared/services/shortcut",{"_index":396,"title":{},"body":{"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"coverage.html":{}}}],["shortcuts/src/lib/shared/services/shortcut.service.ts",{"_index":455,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"coverage.html":{}}}],["shortcuts/src/lib/shared/services/shortcut.service.ts:403",{"_index":458,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcuts/src/lib/shared/services/shortcut.service.ts:429",{"_index":461,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcuts/src/lib/shared/services/shortcut.service.ts:446",{"_index":467,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcuts/src/lib/shared/services/shortcut.service.ts:68",{"_index":469,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcuts/src/lib/shared/services/shortcut.service.ts:83",{"_index":476,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["shortcuts/src/lib/shared/utils/common.ts",{"_index":849,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shortcuts@^13.0.0",{"_index":928,"title":{},"body":{"index.html":{}}}],["shortcuts@^7.0.0",{"_index":931,"title":{},"body":{"index.html":{}}}],["shortcuts@^9.0.0",{"_index":930,"title":{},"body":{"index.html":{}}}],["shortcuts@latest",{"_index":925,"title":{},"body":{"index.html":{}}}],["show",{"_index":150,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["show/hide",{"_index":188,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["showing",{"_index":295,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{}}}],["shown",{"_index":151,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["shows",{"_index":990,"title":{},"body":{"index.html":{}}}],["sign",{"_index":942,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":68,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{}}}],["simplify",{"_index":780,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["single",{"_index":659,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["singleton",{"_index":1050,"title":{},"body":{"index.html":{}}}],["software",{"_index":1103,"title":{},"body":{"license.html":{}}}],["sometimes",{"_index":1064,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{}}}],["space",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spc",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":692,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["specific",{"_index":448,"title":{},"body":{"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["split",{"_index":800,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["stackblitz",{"_index":874,"title":{},"body":{"index.html":{}}}],["start",{"_index":880,"title":{},"body":{"index.html":{}}}],["started",{"_index":863,"title":{"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":966,"title":{},"body":{"index.html":{}}}],["starts",{"_index":963,"title":{},"body":{"index.html":{}}}],["statements",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":424,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{},"injectables/KeyboardShortcutsService.html":{}}}],["still",{"_index":993,"title":{},"body":{"index.html":{}}}],["streams",{"_index":470,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["string",{"_index":52,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["string.fromcharcode(event.which).tolowercase",{"_index":698,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["structure",{"_index":1061,"title":{},"body":{"index.html":{}}}],["style",{"_index":209,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["styles",{"_index":148,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["styleurls",{"_index":153,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["sub.unsubscribe",{"_index":704,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["subject",{"_index":487,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"license.html":{}}}],["sublicense",{"_index":1114,"title":{},"body":{"license.html":{}}}],["subscribe(shortcuts",{"_index":328,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["subscription",{"_index":321,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{}}}],["subscriptionlike",{"_index":216,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["subscriptions",{"_index":530,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["substantial",{"_index":1126,"title":{},"body":{"license.html":{}}}],["such",{"_index":1042,"title":{},"body":{"index.html":{}}}],["support",{"_index":897,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supports",{"_index":981,"title":{},"body":{"index.html":{}}}],["sure",{"_index":754,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["svg",{"_index":1150,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":495,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["switchmap(sequences",{"_index":609,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["symbols",{"_index":842,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":854,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":496,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["takeuntil(this.keyup",{"_index":599,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["takeuntil(this.pressed",{"_index":672,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["takeuntil(this.resetcounter",{"_index":674,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["tap",{"_index":390,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{}}}],["tap((e",{"_index":576,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["tap(shortcut",{"_index":589,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["tap(value",{"_index":611,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["target",{"_index":139,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["tell",{"_index":965,"title":{},"body":{"index.html":{}}}],["template",{"_index":75,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["templateportal",{"_index":224,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["templateportal(this.template",{"_index":309,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["templateref",{"_index":205,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["templateurl",{"_index":155,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["terminal",{"_index":1084,"title":{},"body":{"index.html":{}}}],["test",{"_index":1005,"title":{},"body":{"index.html":{}}}],["text",{"_index":378,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["textarea",{"_index":122,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["there's",{"_index":976,"title":{},"body":{"index.html":{}}}],["this._characterfromevent(event",{"_index":701,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this._closekey",{"_index":289,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this._disabled",{"_index":88,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{}}}],["this._ignored.includes(target.nodename",{"_index":538,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this._key",{"_index":279,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this._pressed.asobservable",{"_index":468,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this._pressed.next",{"_index":598,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this._sequences",{"_index":639,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this._sequences.filter(shortcut",{"_index":722,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this._sequences.push(command",{"_index":714,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this._shortcuts",{"_index":540,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this._shortcuts.filter(shortcut",{"_index":720,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this._shortcuts.push(command",{"_index":715,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this._shortcutssub",{"_index":472,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this._shortcutssub.next([...this._shortcuts",{"_index":716,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.addshortcut",{"_index":280,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.appref",{"_index":305,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.bodyportalhost",{"_index":302,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.bodyportalhost.attach(portal",{"_index":311,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.bodyportalhost.detach",{"_index":314,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.bodyportalhost.hasattached",{"_index":313,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.characterfromevent(event",{"_index":619,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.clearids",{"_index":89,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.clicks$.pipe(first",{"_index":575,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.closekeydescription",{"_index":293,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.closekeyids",{"_index":290,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.componentfactoryresolver",{"_index":304,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.disabled",{"_index":584,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.disablescrolling",{"_index":307,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.el.nativeelement",{"_index":140,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{}}}],["this.getkeys(key.split",{"_index":796,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.hide",{"_index":292,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.ignore$.subscribe",{"_index":683,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.injector",{"_index":306,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.installkeybindings",{"_index":1011,"title":{},"body":{"index.html":{}}}],["this.isfullmatch",{"_index":632,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.issequence(keys",{"_index":799,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.keyboard.add(changes.shortcuts.currentvalue",{"_index":102,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{}}}],["this.keyboard.add(shortcut",{"_index":286,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.keyboard.add(this.shortcuts",{"_index":92,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{}}}],["this.keyboard.add(this.transforminput(ngkeyboardshortcuts.currentvalue",{"_index":147,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{}}}],["this.keyboard.add(this.transforminput(this.ngkeyboardshortcuts",{"_index":135,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{}}}],["this.keyboard.remove(this.clearids",{"_index":90,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.keyboard.remove(this.closekeyids",{"_index":291,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.keyboard.select(\"cmd",{"_index":1048,"title":{},"body":{"index.html":{}}}],["this.keyboard.select('ctrl",{"_index":1024,"title":{},"body":{"index.html":{}}}],["this.keyboard.select(key",{"_index":96,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{}}}],["this.keyboard.shortcuts$.pipe",{"_index":401,"title":{},"body":{"injectables/KeyboardShortcutsHelpService.html":{}}}],["this.keyboardhelp.shortcuts",{"_index":324,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.keyboardservice.select(key",{"_index":454,"title":{},"body":{"injectables/KeyboardShortcutsSelectService.html":{}}}],["this.keyboardshortcuts.push",{"_index":1013,"title":{},"body":{"index.html":{}}}],["this.keydescription",{"_index":283,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.keydown$.pipe",{"_index":582,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.keydowncombo$.subscribe",{"_index":682,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.keydownsequence$.subscribe",{"_index":681,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.keylabel",{"_index":284,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.labels",{"_index":330,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.modifierson(event",{"_index":638,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.ngkeyboardshortcuts",{"_index":134,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{}}}],["this.parsecommand(shortcuts",{"_index":711,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.pressed$.pipe",{"_index":572,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.reveal",{"_index":320,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.shortcutlog",{"_index":1015,"title":{},"body":{"index.html":{}}}],["this.shortcuts",{"_index":329,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.shortcuts$.pipe",{"_index":607,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.shortcuts.push",{"_index":1045,"title":{},"body":{"index.html":{}}}],["this.showing",{"_index":312,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.subscription",{"_index":315,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":316,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.subscriptions.foreach(sub",{"_index":703,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.subscriptions.push",{"_index":680,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.throttletime",{"_index":804,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.timeoutid",{"_index":317,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.timer",{"_index":603,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.timer$.next(value",{"_index":612,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["this.toggle",{"_index":282,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.viewcontainer",{"_index":310,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["this.visible",{"_index":319,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["those",{"_index":760,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["throttle",{"_index":497,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["throttle(shortcut",{"_index":593,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["throttletime",{"_index":516,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["throwerror",{"_index":488,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["throwerror(error",{"_index":601,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["thus",{"_index":772,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["time",{"_index":817,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["timeout_sequence",{"_index":526,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["timeoutid",{"_index":323,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["timer",{"_index":489,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["timer().subscribe",{"_index":1071,"title":{},"body":{"index.html":{}}}],["timer(500).pipe",{"_index":669,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["timer(keyboardshortcutsservice.timeout_sequence",{"_index":605,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["timer(shortcut.throttletime",{"_index":594,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["times",{"_index":19,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{}}}],["title",{"_index":170,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["title__text",{"_index":380,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["todo",{"_index":777,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["together",{"_index":1035,"title":{},"body":{"index.html":{}}}],["toggle",{"_index":161,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["top",{"_index":335,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["tort",{"_index":1146,"title":{},"body":{"license.html":{}}}],["touchmove",{"_index":248,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["transform",{"_index":264,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["transforminput(shortcuts",{"_index":137,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{}}}],["transforms",{"_index":727,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["transition",{"_index":210,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["transition(\":enter",{"_index":263,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["transition(\":leave",{"_index":273,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["translatex",{"_index":265,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["translatex(0",{"_index":272,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["transparent",{"_index":393,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{}}}],["trigger",{"_index":211,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["trigger(\"enteranimation",{"_index":262,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["trigger(\"overlayanimation",{"_index":275,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["triggered",{"_index":828,"title":{},"body":{"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["true",{"_index":179,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["twice",{"_index":1066,"title":{},"body":{"index.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":685,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":885,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["under",{"_index":1089,"title":{},"body":{"index.html":{}}}],["unless",{"_index":978,"title":{},"body":{"index.html":{}}}],["up",{"_index":80,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":903,"title":{},"body":{"index.html":{}}}],["updates",{"_index":1055,"title":{},"body":{"index.html":{}}}],["upper",{"_index":697,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["usage",{"_index":881,"title":{},"body":{"index.html":{}}}],["use",{"_index":450,"title":{},"body":{"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":17,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"injectables/KeyboardShortcutsService.html":{},"interfaces/Shortcut.html":{},"interfaces/ShortcutEventOutput.html":{},"interfaces/ShortcutInput.html":{},"index.html":{}}}],["user",{"_index":656,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["uses",{"_index":946,"title":{},"body":{"index.html":{}}}],["using",{"_index":452,"title":{},"body":{"injectables/KeyboardShortcutsSelectService.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["utils/common",{"_index":504,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["v",{"_index":1019,"title":{},"body":{"index.html":{}}}],["v10/11/12/13",{"_index":927,"title":{},"body":{"index.html":{}}}],["v13",{"_index":924,"title":{},"body":{"index.html":{}}}],["v13.x",{"_index":914,"title":{},"body":{"index.html":{}}}],["v7",{"_index":915,"title":{},"body":{"index.html":{}}}],["v8/9",{"_index":929,"title":{},"body":{"index.html":{}}}],["value",{"_index":48,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsHelpService.html":{},"injectables/KeyboardShortcutsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":107,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"components/KeyboardShortcutsHelpComponent.html":{}}}],["variable",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1154,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":997,"title":{},"body":{"index.html":{}}}],["verify",{"_index":765,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["version",{"_index":904,"title":{},"body":{"index.html":{}}}],["versions",{"_index":898,"title":{},"body":{"index.html":{}}}],["version}.tgz",{"_index":1081,"title":{},"body":{"index.html":{}}}],["very",{"_index":960,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":206,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["viewchild('input",{"_index":1008,"title":{},"body":{"index.html":{}}}],["viewchild(keyboardshortcutscomponent",{"_index":1009,"title":{},"body":{"index.html":{}}}],["viewchild(templateref",{"_index":294,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["viewcontainer",{"_index":301,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["viewcontainerref",{"_index":207,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["visibility",{"_index":1039,"title":{},"body":{"index.html":{}}}],["visible",{"_index":162,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{},"index.html":{}}}],["void",{"_index":65,"title":{},"body":{"components/KeyboardShortcutsComponent.html":{},"directives/KeyboardShortcutsDirective.html":{},"components/KeyboardShortcutsHelpComponent.html":{},"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["wait",{"_index":973,"title":{},"body":{"index.html":{}}}],["want",{"_index":752,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["warning",{"_index":989,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1133,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1128,"title":{},"body":{"license.html":{}}}],["way",{"_index":779,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["webkit",{"_index":389,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["welcome",{"_index":1041,"title":{},"body":{"index.html":{}}}],["well",{"_index":655,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["wheel",{"_index":245,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["whether",{"_index":124,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{},"index.html":{},"license.html":{}}}],["whole",{"_index":1062,"title":{},"body":{"index.html":{}}}],["width",{"_index":350,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["window",{"_index":519,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["window.addeventlistener(\"keydown",{"_index":256,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["window.addeventlistener(event.name",{"_index":253,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["window.event",{"_index":238,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["window.removeeventlistener(\"keydown",{"_index":260,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["window.removeeventlistener(event.name",{"_index":258,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["without",{"_index":996,"title":{},"body":{"index.html":{},"license.html":{}}}],["won't",{"_index":766,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{},"index.html":{}}}],["work",{"_index":127,"title":{},"body":{"directives/KeyboardShortcutsDirective.html":{},"injectables/KeyboardShortcutsSelectService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["works",{"_index":994,"title":{},"body":{"index.html":{}}}],["world",{"_index":1046,"title":{},"body":{"index.html":{}}}],["x",{"_index":861,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["yarn",{"_index":1027,"title":{},"body":{"index.html":{}}}],["z",{"_index":337,"title":{},"body":{"components/KeyboardShortcutsHelpComponent.html":{}}}],["z\\d\\s:]/.test(key",{"_index":743,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["za",{"_index":742,"title":{},"body":{"injectables/KeyboardShortcutsService.html":{}}}],["zoom",{"_index":417,"title":{},"body":{"modules/KeyboardShortcutsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/KeyboardShortcutsComponent.html":{"url":"components/KeyboardShortcutsComponent.html","title":"component - KeyboardShortcutsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  KeyboardShortcutsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ng-keyboard-shortcuts/src/lib/components/keyboard-shortcuts/keyboard-shortcuts.component.ts\n\n\n\n    \n        Description\n    \n    \n        A component to bind global shortcuts, can be used multiple times across the app\nwill remove registered shortcuts when element is removed from DOM.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-keyboard-shortcuts\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                shortcuts\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    disabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/keyboard-shortcuts/keyboard-shortcuts.component.ts:43\n                            \n                        \n                \n                    \n                        Disable all shortcuts for this component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        shortcuts\n                    \n                \n                \n                    \n                        Type :     ShortcutInput[] | ShortcutInput\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/keyboard-shortcuts/keyboard-shortcuts.component.ts:26\n                            \n                        \n                \n                    \n                        A list of shortcuts.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        select\n                        \n                    \n                \n            \n            \n                \n                    \n                    select(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/keyboard-shortcuts/keyboard-shortcuts.component.ts:72\n                \n            \n\n\n            \n                \n                    Select a key to listen to, will emit when the selected key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n\n                \n                    \n                        setdisabled(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/keyboard-shortcuts/keyboard-shortcuts.component.ts:43\n                                \n                            \n                    \n                        \n                                Disable all shortcuts for this component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges\n} from \"@angular/core\";\nimport { KeyboardShortcutsService } from \"./../../shared/services/shortcut.service\";\nimport { ShortcutInput, ShortcutEventOutput } from \"./../../shared/models/shortcut\";\nimport { Observable } from \"rxjs\";\n\n/**\n* A component to bind global shortcuts, can be used multiple times across the app\n* will remove registered shortcuts when element is removed from DOM.\n*/\n@Component({\n  selector: \"ng-keyboard-shortcuts\",\n  template: \"\"\n})\nexport class KeyboardShortcutsComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n  /**\n   * A list of shortcuts.\n   */\n  @Input() shortcuts: ShortcutInput[] | ShortcutInput = [];\n\n  /**\n   * @ignore\n   * list of registered keyboard shortcuts\n   * used for clean up on NgDestroy.\n   */\n  private clearIds: string[] = [];\n\n  /**\n   * @ignore\n   */\n  private _disabled = false;\n  \n  /**\n   * Disable all shortcuts for this component.\n   */\n  @Input() set disabled(value: boolean) {\n      this._disabled = value;\n\n      if (this.clearIds) {\n          this.keyboard.remove(this.clearIds);\n          this.clearIds = [];\n      }\n\n      if (value) {\n          return;\n      }\n\n      this.clearIds = this.keyboard.add(this.shortcuts);\n  }\n\n  /**\n   * @ignore\n   * @param {KeyboardShortcutsService} keyboard\n   */\n  constructor(private keyboard: KeyboardShortcutsService) {}\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {}\n\n  /**\n   * Select a key to listen to, will emit when the selected key is pressed.\n   */\n  public select(key: string): Observable {\n      return this.keyboard.select(key);\n  }\n\n  /**\n   * @ignore\n   */\n  ngAfterViewInit(): void {}\n\n  /**\n   * @ignore\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n      if (!changes.shortcuts || !changes.shortcuts.currentValue) {\n          return;\n      }\n\n      if (this.clearIds) {\n          this.keyboard.remove(this.clearIds);\n      }\n\n      if (!this._disabled) {\n          setTimeout(() => (this.clearIds = this.keyboard.add(changes.shortcuts.currentValue)));\n      }\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnDestroy(): void {\n      this.keyboard.remove(this.clearIds);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'KeyboardShortcutsComponent', 'selector': 'ng-keyboard-shortcuts'},{'name': 'KeyboardShortcutsHelpComponent', 'selector': 'ng-keyboard-shortcuts-help'}];\n    var DIRECTIVES = [{'name': 'KeyboardShortcutsDirective', 'selector': '[ngKeyboardShortcuts]'}];\n    var ACTUAL_COMPONENT = {'name': 'KeyboardShortcutsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/KeyboardShortcutsDirective.html":{"url":"directives/KeyboardShortcutsDirective.html","title":"directive - KeyboardShortcutsDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  KeyboardShortcutsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng-keyboard-shortcuts/src/lib/shared/directives/keyboard-shortcuts.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                A directive to be used with \"focusable\" elements, like:\ntextarea, input, select.\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngKeyboardShortcuts]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                ngKeyboardShortcuts\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    disabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ng-keyboard-shortcuts/src/lib/shared/directives/keyboard-shortcuts.directive.ts:34\n                            \n                        \n                \n                    \n                        whether to disable the shortcuts for this directive\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ngKeyboardShortcuts\n                    \n                \n                \n                    \n                        Type :         Shortcut[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ng-keyboard-shortcuts/src/lib/shared/directives/keyboard-shortcuts.directive.ts:22\n                            \n                        \n                \n                    \n                        Shortcut inputs for the directive.\nwill only work when the element is in focus\n\n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n\n                \n                    \n                        setdisabled(value)\n                    \n                \n                            \n                                \n                                    Defined in projects/ng-keyboard-shortcuts/src/lib/shared/directives/keyboard-shortcuts.directive.ts:34\n                                \n                            \n                    \n                        \n                                whether to disable the shortcuts for this directive\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges } from \"@angular/core\";\n\nimport { AllowIn, Shortcut } from \"./../models/shortcut\";\nimport { KeyboardShortcutsService } from \"./../services/shortcut.service\";\n\n/**\n * A directive to be used with \"focusable\" elements, like:\n * textarea, input, select.\n */\n@Directive({\n    selector: \"[ngKeyboardShortcuts]\"\n})\nexport class KeyboardShortcutsDirective implements OnDestroy, OnChanges {\n    /**\n     * clearId to remove shortcuts.\n     */\n    private clearIds;\n    /**\n     * Shortcut inputs for the directive.\n     * will only work when the element is in focus\n     */\n    @Input() ngKeyboardShortcuts: Shortcut[];\n    /**\n     * @ignore\n     * @type {boolean}\n     * @private\n     */\n    private _disabled = false;\n\n    /**\n     * whether to disable the shortcuts for this directive\n     * @param value\n     */\n    @Input() set disabled(value) {\n        this._disabled = value;\n\n        if (this.clearIds) {\n            this.keyboard.remove(this.clearIds);\n        }\n\n        setTimeout(() => {\n            if (value === false && this.ngKeyboardShortcuts) {\n                this.clearIds = this.keyboard.add(this.transformInput(this.ngKeyboardShortcuts));\n            }\n        });\n    }\n\n    /**\n     * @ignore\n     * @param {KeyboardShortcutsService} keyboard\n     * @param {ElementRef} el\n     */\n    constructor(private keyboard: KeyboardShortcutsService, private el: ElementRef) {}\n\n    /**\n     * @ignore\n     * @param {Shortcut[]} shortcuts\n     * @returns {any}\n     */\n    private transformInput(shortcuts: Shortcut[]) {\n        return shortcuts.map(shortcut => ({\n            ...shortcut,\n            target: this.el.nativeElement,\n            allowIn: [AllowIn.Select, AllowIn.Input, AllowIn.Textarea]\n        }));\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        if (!this.clearIds) {\n            return;\n        }\n\n        this.keyboard.remove(this.clearIds);\n    }\n\n    /**\n     * @ignore\n     * @param {SimpleChanges} changes\n     */\n    ngOnChanges(changes: SimpleChanges) {\n        const { ngKeyboardShortcuts } = changes;\n\n        if (this.clearIds) {\n            this.keyboard.remove(this.clearIds);\n        }\n\n        if (!ngKeyboardShortcuts || !ngKeyboardShortcuts.currentValue) {\n            return;\n        }\n\n        this.clearIds = this.keyboard.add(this.transformInput(ngKeyboardShortcuts.currentValue));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/KeyboardShortcutsHelpComponent.html":{"url":"components/KeyboardShortcutsHelpComponent.html","title":"component - KeyboardShortcutsHelpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  KeyboardShortcutsHelpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ng-keyboard-shortcuts/src/lib/components/help/help.component.ts\n\n\n\n    \n        Description\n    \n    \n        A Component to show all registered shortcut in the app\nit is shown as a modal\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-keyboard-shortcuts-help\n            \n\n            \n                styleUrls\n                ./help.component.css\n            \n\n\n\n            \n                templateUrl\n                ./help.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                className\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                reveal\n                            \n                            \n                                toggle\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeKey\n                            \n                            \n                                closeKeyDescription\n                            \n                            \n                                closeKeyLabel\n                            \n                            \n                                disableScrolling\n                            \n                            \n                                emptyMessage\n                            \n                            \n                                key\n                            \n                            \n                                keyDescription\n                            \n                            \n                                keyLabel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    key\n                                \n                                \n                                    closeKey\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        closeKey\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/help/help.component.ts:257\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        closeKeyDescription\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/help/help.component.ts:224\n                            \n                        \n                \n                    \n                        A description that will be shown in the help menu.\nMUST almost provide a label for the key to be shown\nin the help menu\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        closeKeyLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/help/help.component.ts:217\n                            \n                        \n                \n                    \n                        The label to group by the help menu close shortcut.\nmust provide a description for the key to show\nin the help menu\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disableScrolling\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/help/help.component.ts:190\n                            \n                        \n                \n                    \n                        Disable scrolling while modal is open\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emptyMessage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"No shortcuts available\"\n                    \n                \n                        \n                            \n                                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/help/help.component.ts:287\n                            \n                        \n                \n                    \n                        What message to show when no shortcuts are available on the page.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/help/help.component.ts:230\n                            \n                        \n                \n                    \n                        The shortcut to show/hide the help screen\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        keyDescription\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/help/help.component.ts:203\n                            \n                        \n                \n                    \n                        A description that will be shown in the help menu.\nMUST almost provide a label for the key to be shown\nin the help menu\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        keyLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/help/help.component.ts:210\n                            \n                        \n                \n                    \n                        The label to group by the help menu toggle shortcut.\nmust provide a description for the key to show\nin the help menu\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Keyboard shortcuts\"\n                    \n                \n                        \n                            \n                                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/help/help.component.ts:281\n                            \n                        \n                \n                    \n                        The title of the help screen\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/help/help.component.ts:366\n                \n            \n\n\n            \n                \n                    Hide the help screen manually.\n\n\n                    \n                        Returns :         KeyboardShortcutsHelpComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reveal\n                        \n                    \n                \n            \n            \n                \nreveal()\n                \n            \n\n\n            \n                \n                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/help/help.component.ts:341\n                \n            \n\n\n            \n                \n                    Reveal the help screen manually.\n\n\n                    \n                        Returns :         KeyboardShortcutsHelpComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/help/help.component.ts:407\n                \n            \n\n\n            \n                \n                    Show/Hide the help screen manually.\n\n\n                    \n                        Returns :         KeyboardShortcutsHelpComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n            \n                \nvisible()\n                \n            \n\n\n            \n                \n                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/help/help.component.ts:359\n                \n            \n\n\n            \n                \n                    Check if help screen is visible.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"help-modal\"\n                    \n                \n                    \n                        \n                                Defined in projects/ng-keyboard-shortcuts/src/lib/components/help/help.component.ts:196\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n\n\n                \n                    \n                        setkey(value: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/help/help.component.ts:230\n                                \n                            \n                    \n                        \n                                The shortcut to show/hide the help screen\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        closeKey\n                    \n                \n\n\n                \n                    \n                        setcloseKey(value: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/ng-keyboard-shortcuts/src/lib/components/help/help.component.ts:257\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n    ApplicationRef,\n    Component,\n    ComponentFactoryResolver,\n    ElementRef,\n    Injector,\n    Input,\n    OnDestroy,\n    OnInit,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef\n} from \"@angular/core\";\n\nimport { animate, style, transition, trigger } from \"@angular/animations\";\nimport { distinctUntilChanged, map } from \"rxjs/operators\";\nimport { SubscriptionLike } from \"rxjs\";\n\nimport { KeyboardShortcutsService } from \"../../shared/services/shortcut.service\";\nimport { KeyboardShortcutsHelpService } from \"../../shared/services/shortcut-help.service\";\n\nimport { DomPortalOutlet } from \"../../shared/utils/dom-portal-outlet\";\nimport { TemplatePortal } from \"../../shared/models/portal\";\nimport { Shortcut } from \"../../shared/models/shortcut\";\nimport { groupBy } from \"../../shared/utils/common\";\n\n/**\n * @ignore\n */\nconst scrollAbleKeys = new Map([\n    [31, 1],\n    [38, 1],\n    [39, 1],\n    [40, 1]\n]);\n\n/**\n * @ignore\n */\nconst preventDefault = (ignore: string) => e => {\n    const modal = e.target.closest(ignore);\n\n    if (modal) {\n        return;\n    }\n\n    e = e || window.event;\n\n    if (e.preventDefault) {\n        e.preventDefault();\n    }\n\n    e.returnValue = false;\n};\n\n/**\n * @ignore\n */\nconst preventDefaultForScrollKeys = e => {\n    if (!scrollAbleKeys.has(e.keyCode)) {\n        return;\n    }\n\n    preventDefault(e);\n\n    return false;\n};\n\n/**\n * @ignore\n */\nlet scrollEvents = [\n    {\n        name: \"wheel\",\n        callback: null\n    },\n    {\n        name: \"touchmove\",\n        callback: null\n    },\n    {\n        name: \"DOMMouseScroll\",\n        callback: null\n    }\n];\n\n/**\n * @ignore\n */\nconst disableScroll = (ignore: string) => {\n    scrollEvents = scrollEvents.map(event => {\n        const callback = preventDefault(ignore);\n\n        window.addEventListener(event.name, callback, {\n            passive: false\n        });\n\n        return {\n            ...event,\n            callback\n        };\n    });\n\n    window.addEventListener(\"keydown\", preventDefaultForScrollKeys);\n};\n\n/**\n * @ignore\n */\nconst enableScroll = () => {\n    scrollEvents = scrollEvents.map(event => {\n        window.removeEventListener(event.name, event.callback);\n\n        return {\n            ...event,\n            callback: null\n        };\n    });\n\n    window.removeEventListener(\"keydown\", preventDefaultForScrollKeys);\n};\n\n/**\n * A Component to show all registered shortcut in the app\n * it is shown as a modal\n */\n@Component({\n    selector: \"ng-keyboard-shortcuts-help\",\n    templateUrl: \"./help.component.html\",\n    styleUrls: [\"./help.component.css\"],\n    animations: [\n        trigger(\"enterAnimation\", [\n            transition(\":enter\", [\n                style({\n                    transform: \"translateX(-100%)\",\n                    opacity: 0\n                }),\n                animate(\n                    \"0.33s cubic-bezier(0,0,0.3,1)\",\n                    style({\n                        transform: \"translateX(0)\",\n                        opacity: 1\n                    })\n                )\n            ]),\n            transition(\":leave\", [\n                style({\n                    transform: \"translateX(0)\",\n                    opacity: 1\n                }),\n                animate(\n                    \"0.23s cubic-bezier(0,0,0.3,1)\",\n                    style({\n                        transform: \"translateX(-100%)\",\n                        opacity: 0\n                    })\n                )\n            ])\n        ]),\n        trigger(\"overlayAnimation\", [\n            transition(\":enter\", [\n                style({\n                    opacity: 0\n                }),\n                animate(\n                    \"1s cubic-bezier(0,0,0.3,1)\",\n                    style({\n                        opacity: 1\n                    })\n                )\n            ]),\n            transition(\":leave\", [\n                style({\n                    opacity: 1\n                }),\n                animate(\n                    \"1s cubic-bezier(0,0,0.3,1)\",\n                    style({\n                        opacity: 0\n                    })\n                )\n            ])\n        ])\n    ]\n})\nexport class KeyboardShortcutsHelpComponent implements OnInit, OnDestroy {\n    /**\n     * Disable scrolling while modal is open\n     */\n    @Input() disableScrolling = true;\n    /**\n     * @ignore\n     */\n    private _key: string;\n\n    public className = \"help-modal\";\n\n    /**\n     * A description that will be shown in the help menu.\n     * MUST almost provide a label for the key to be shown\n     * in the help menu\n     */\n    @Input() keyDescription: string;\n\n    /**\n     * The label to group by the help menu toggle shortcut.\n     * must provide a description for the key to show\n     * in the help menu\n     */\n    @Input() keyLabel: string;\n\n    /**\n     * The label to group by the help menu close shortcut.\n     * must provide a description for the key to show\n     * in the help menu\n     */\n    @Input() closeKeyLabel: string;\n\n    /**\n     * A description that will be shown in the help menu.\n     * MUST almost provide a label for the key to be shown\n     * in the help menu\n     */\n    @Input() closeKeyDescription: string;\n\n    /**\n     * The shortcut to show/hide the help screen\n     */\n    @Input()\n    set key(value: string) {\n        this._key = value;\n\n        if (!value) {\n            return;\n        }\n\n        if (this.clearIds) {\n            this.keyboard.remove(this.clearIds);\n        }\n\n        this.clearIds = this.addShortcut({\n            key: value,\n            preventDefault: true,\n            command: () => this.toggle(),\n            description: this.keyDescription,\n            label: this.keyLabel\n        });\n    }\n\n    private addShortcut(shortcut: Shortcut) {\n        return this.keyboard.add(shortcut);\n    }\n\n    private _closeKey;\n\n    @Input()\n    set closeKey(value: string) {\n        this._closeKey = value;\n\n        if (!value) {\n            return;\n        }\n\n        if (this.closeKeyIds) {\n            this.keyboard.remove(this.closeKeyIds);\n        }\n\n        this.closeKeyIds = this.addShortcut({\n            key: value,\n            preventDefault: true,\n            command: () => this.hide(),\n            description: this.closeKeyDescription,\n            label: this.closeKeyDescription\n        });\n    }\n\n    /**\n     * The title of the help screen\n     * @default: \"Keyboard shortcuts\"\n     */\n    @Input() title = \"Keyboard shortcuts\";\n\n    /**\n     * What message to show when no shortcuts are available on the page.\n     * @default \"No shortcuts available\"\n     */\n    @Input() emptyMessage = \"No shortcuts available\";\n\n    /**\n     * @ignore\n     */\n    @ViewChild(TemplateRef) template: TemplateRef;\n\n    /**\n     * @ignore\n     */\n    shortcuts: {\n        label: string;\n        key: string | string[];\n        description: string;\n    }[];\n\n    /**\n     * @ignore\n     */\n    showing = false;\n\n    /**\n     * @ignore\n     */\n    labels: string[];\n\n    /**\n     * @ignore\n     */\n    private bodyPortalHost: DomPortalOutlet;\n\n    /**\n     * @ignore\n     */\n    constructor(\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private appRef: ApplicationRef,\n        private keyboard: KeyboardShortcutsService,\n        private element: ElementRef,\n        private keyboardHelp: KeyboardShortcutsHelpService,\n        private viewContainer: ViewContainerRef,\n        private injector: Injector\n    ) {\n        this.bodyPortalHost = new DomPortalOutlet(\n            document.body,\n            this.componentFactoryResolver,\n            this.appRef,\n            this.injector\n        );\n    }\n\n    /**\n     * Reveal the help screen manually.\n     */\n    reveal(): KeyboardShortcutsHelpComponent {\n        this.hide();\n\n        if (this.disableScrolling) {\n            disableScroll(`.${this.className}`);\n        }\n\n        const portal = new TemplatePortal(this.template, this.viewContainer);\n        this.bodyPortalHost.attach(portal);\n        this.showing = true;\n\n        return this;\n    }\n\n    /**\n     * Check if help screen is visible.\n     * @returns boolean\n     */\n    visible(): boolean {\n        return this.bodyPortalHost.hasAttached();\n    }\n\n    /**\n     * Hide the help screen manually.\n     */\n    hide(): KeyboardShortcutsHelpComponent {\n        if (this.disableScrolling) {\n            enableScroll();\n        }\n\n        if (!this.bodyPortalHost.hasAttached()) {\n            return this;\n        }\n\n        this.bodyPortalHost.detach();\n        this.showing = false;\n\n        return this;\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy(): void {\n        this.hide();\n\n        if (this.clearIds) {\n            this.keyboard.remove(this.clearIds);\n        }\n\n        if (this.closeKeyIds) {\n            this.keyboard.remove(this.closeKeyIds);\n        }\n\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n        }\n    }\n\n    /**\n     * Show/Hide the help screen manually.\n     */\n    toggle(): KeyboardShortcutsHelpComponent {\n        this.visible() ? this.hide() : this.reveal();\n\n        return this;\n    }\n\n    /**\n     * @ignore\n     */\n    private subscription: SubscriptionLike;\n\n    /**\n     * @ignore\n     */\n    private clearIds;\n\n    /**\n     * @ignore\n     */\n    private closeKeyIds;\n\n    /**\n     * @ignore\n     */\n    private timeoutId;\n\n    /**\n     * @ignore\n     */\n    ngOnInit() {\n        this.subscription = this.keyboardHelp.shortcuts$\n            .pipe(\n                distinctUntilChanged(),\n                map(shortcuts => groupBy(shortcuts, \"label\"))\n            )\n            .subscribe(shortcuts => {\n                this.shortcuts = shortcuts;\n                this.labels = Object.keys(shortcuts);\n            });\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{title}}\n            \n\n            \n                \n                    {{emptyMessage}}\n                \n\n                \n                    \n                        {{label}}\n                        \n                        \n                    \n                \n            \n        \n        \n        \n    \n\n    \n\n    \n                \n                    ./help.component.css\n                \n                .help-modal__container {\n    position: fixed;\n    top: 0;\n    right: 0;\n    z-index: 500;\n    left: 0;\n    bottom: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.help-modal {\n    z-index: 2000;\n    min-width: 420px;\n    max-height: calc(100% - 100px);\n    overflow: auto;\n    padding: 20px;\n    box-shadow: 0 11px 15px -7px rgba(0, 0, 0, .2), 0 24px 38px 3px rgba(0, 0, 0, .14), 0 9px 46px 8px rgba(0, 0, 0, .12);\n    background: #fff;\n}\n\n.item-group-label {\n    text-transform: capitalize;\n}\n\n.title {\n    padding: 20px 0;\n}\n\n.title__text {\n    margin: 0;\n    padding: 0;\n}\n\n.help-modal__list {\n    padding: 0;\n}\n\n.help-modal__backdrop {\n    position: absolute;\n    background: rgba(0, 0, 0, 0.27);\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 1000;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    opacity: 1;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{title}}                                                            {{emptyMessage}}                                                                            {{label}}                                                                                                                            '\n    var COMPONENTS = [{'name': 'KeyboardShortcutsComponent', 'selector': 'ng-keyboard-shortcuts'},{'name': 'KeyboardShortcutsHelpComponent', 'selector': 'ng-keyboard-shortcuts-help'}];\n    var DIRECTIVES = [{'name': 'KeyboardShortcutsDirective', 'selector': '[ngKeyboardShortcuts]'}];\n    var ACTUAL_COMPONENT = {'name': 'KeyboardShortcutsHelpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeyboardShortcutsHelpService.html":{"url":"injectables/KeyboardShortcutsHelpService.html","title":"injectable - KeyboardShortcutsHelpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KeyboardShortcutsHelpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng-keyboard-shortcuts/src/lib/shared/services/shortcut-help.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to assist showing custom help screen\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                shortcuts$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        shortcuts$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.keyboard.shortcuts$.pipe(\n        map(shortcuts =>\n            shortcuts\n                .filter(shortcut => Boolean(shortcut.label) && Boolean(shortcut.description))\n                .map(({ key, label, description }) => ({\n                    key,\n                    label,\n                    description\n                }))\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in projects/ng-keyboard-shortcuts/src/lib/shared/services/shortcut-help.service.ts:22\n                        \n                    \n\n            \n                \n                    Observable to provide access to all registered shortcuts in the app.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { KeyboardShortcutsService } from \"./shortcut.service\";\nimport { map } from \"rxjs/operators\";\n\n/**\n * Service to assist showing custom help screen\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class KeyboardShortcutsHelpService {\n    /**\n     * @ignore\n     * @param {KeyboardShortcutsService} keyboard\n     */\n    constructor(private keyboard: KeyboardShortcutsService) {}\n\n    /**\n     * Observable to provide access to all registered shortcuts in the app.\n     * @type {Observable}\n     */\n    public shortcuts$ = this.keyboard.shortcuts$.pipe(\n        map(shortcuts =>\n            shortcuts\n                .filter(shortcut => Boolean(shortcut.label) && Boolean(shortcut.description))\n                .map(({ key, label, description }) => ({\n                    key,\n                    label,\n                    description\n                }))\n        )\n    );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/KeyboardShortcutsModule.html":{"url":"modules/KeyboardShortcutsModule.html","title":"module - KeyboardShortcutsModule","body":"\n                   \n\n\n\n\n    Modules\n    KeyboardShortcutsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_KeyboardShortcutsModule\n\n\n\ncluster_KeyboardShortcutsModule_exports\n\n\n\ncluster_KeyboardShortcutsModule_declarations\n\n\n\n\nKeyboardShortcutsComponent\n\nKeyboardShortcutsComponent\n\n\n\nKeyboardShortcutsModule\n\nKeyboardShortcutsModule\n\nKeyboardShortcutsModule -->\n\nKeyboardShortcutsComponent->KeyboardShortcutsModule\n\n\n\n\n\nKeyboardShortcutsDirective\n\nKeyboardShortcutsDirective\n\nKeyboardShortcutsModule -->\n\nKeyboardShortcutsDirective->KeyboardShortcutsModule\n\n\n\n\n\nKeyboardShortcutsHelpComponent\n\nKeyboardShortcutsHelpComponent\n\nKeyboardShortcutsModule -->\n\nKeyboardShortcutsHelpComponent->KeyboardShortcutsModule\n\n\n\n\n\nKeyboardShortcutsComponent \n\nKeyboardShortcutsComponent \n\nKeyboardShortcutsComponent  -->\n\nKeyboardShortcutsModule->KeyboardShortcutsComponent \n\n\n\n\n\nKeyboardShortcutsDirective \n\nKeyboardShortcutsDirective \n\nKeyboardShortcutsDirective  -->\n\nKeyboardShortcutsModule->KeyboardShortcutsDirective \n\n\n\n\n\nKeyboardShortcutsHelpComponent \n\nKeyboardShortcutsHelpComponent \n\nKeyboardShortcutsHelpComponent  -->\n\nKeyboardShortcutsModule->KeyboardShortcutsHelpComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ng-keyboard-shortcuts/src/lib/ng-keyboard-shortcuts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            KeyboardShortcutsComponent\n                        \n                        \n                            KeyboardShortcutsDirective\n                        \n                        \n                            KeyboardShortcutsHelpComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            KeyboardShortcutsComponent\n                        \n                        \n                            KeyboardShortcutsDirective\n                        \n                        \n                            KeyboardShortcutsHelpComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/ng-keyboard-shortcuts/src/lib/ng-keyboard-shortcuts.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { KeyboardShortcutsService } from \"./shared/services/shortcut.service\";\nimport { KeyboardShortcutsHelpService } from \"./shared/services/shortcut-help.service\";\nimport { KeyboardShortcutsSelectService } from \"./shared/services/shortcut-select.service\";\nimport { KeyboardShortcutsDirective } from \"./shared/directives/keyboard-shortcuts.directive\";\n\nimport { KeyboardShortcutsComponent } from \"./components/keyboard-shortcuts/keyboard-shortcuts.component\";\nimport { KeyboardShortcutsHelpComponent } from './components/help/help.component';\nimport { KeyboardShortcutsHelpItemComponent } from \"./components/help/item/item.component\";\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        KeyboardShortcutsComponent,\n        KeyboardShortcutsDirective,\n        KeyboardShortcutsHelpComponent,\n        KeyboardShortcutsHelpItemComponent\n    ],\n    exports: [\n        KeyboardShortcutsComponent,\n        KeyboardShortcutsDirective,\n        KeyboardShortcutsHelpComponent\n    ]\n})\nexport class KeyboardShortcutsModule {\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: KeyboardShortcutsModule,\n            providers: [\n                KeyboardShortcutsService,\n                KeyboardShortcutsHelpService,\n                KeyboardShortcutsSelectService\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeyboardShortcutsSelectService.html":{"url":"injectables/KeyboardShortcutsSelectService.html","title":"injectable - KeyboardShortcutsSelectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KeyboardShortcutsSelectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng-keyboard-shortcuts/src/lib/shared/services/shortcut-select.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                select\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(keyboardService: KeyboardShortcutsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ng-keyboard-shortcuts/src/lib/shared/services/shortcut-select.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyboardService\n                                                  \n                                                        \n                                                                        KeyboardShortcutsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        select\n                        \n                    \n                \n            \n            \n                \n                    \n                    select(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ng-keyboard-shortcuts/src/lib/shared/services/shortcut-select.service.ts:18\n                \n            \n\n\n            \n                \n                    Returns an observable of keyboard shortcut filtered by a specific key.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe key to filter the observable by.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { KeyboardShortcutsService } from \"./shortcut.service\";\n\n@Injectable({\n    providedIn: \"root\"\n})\n/**\n * Use this service to listen to a specific keyboards events using Rxjs.\n * The shortcut must be declared in the app for the select to work.\n */\nexport class KeyboardShortcutsSelectService {\n    constructor(private keyboardService: KeyboardShortcutsService) {}\n\n    /**\n     * Returns an observable of keyboard shortcut filtered by a specific key.\n     * @param key - the key to filter the observable by.\n     */\n    public select(key: string) {\n        return this.keyboardService.select(key);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeyboardShortcutsService.html":{"url":"injectables/KeyboardShortcutsService.html","title":"injectable - KeyboardShortcutsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KeyboardShortcutsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng-keyboard-shortcuts/src/lib/shared/services/shortcut.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pressed$\n                            \n                            \n                                    Public\n                                shortcuts$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                select\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(shortcuts: ShortcutInput[] | ShortcutInput)\n                \n            \n\n\n            \n                \n                    Defined in projects/ng-keyboard-shortcuts/src/lib/shared/services/shortcut.service.ts:403\n                \n            \n\n\n            \n                \n                    Add new shortcut/s\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shortcuts\n                                    \n                                            ShortcutInput[] | ShortcutInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(ids: string | string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ng-keyboard-shortcuts/src/lib/shared/services/shortcut.service.ts:429\n                \n            \n\n\n            \n                \n                    Remove a command based on key or array of keys.\ncan be used for cleanup.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string | string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         KeyboardShortcutsService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        select\n                        \n                    \n                \n            \n            \n                \n                    \n                    select(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ng-keyboard-shortcuts/src/lib/shared/services/shortcut.service.ts:446\n                \n            \n\n\n            \n                \n                    Returns an observable of keyboard shortcut filtered by a specific key.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe key to filter the observable by.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pressed$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._pressed.asObservable()\n                    \n                \n                    \n                        \n                                Defined in projects/ng-keyboard-shortcuts/src/lib/shared/services/shortcut.service.ts:68\n                        \n                    \n\n            \n                \n                    Streams of pressed events, can be used instead or with a command.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        shortcuts$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._shortcutsSub\n        .asObservable()\n        .pipe(filter(shortcuts => !!shortcuts.length))\n                    \n                \n                    \n                        \n                                Defined in projects/ng-keyboard-shortcuts/src/lib/shared/services/shortcut.service.ts:83\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, OnDestroy } from \"@angular/core\";\nimport {\n    _INVERTED_SHIFT_MAP,\n    _KEYCODE_MAP,\n    _MAP,\n    _SHIFT_MAP,\n    _SPECIAL_CASES,\n    modifiers\n} from \"./../models/key\";\nimport {\n    BehaviorSubject,\n    fromEvent,\n    Observable,\n    Subject,\n    Subscription,\n    throwError,\n    timer,\n    of\n} from \"rxjs\";\nimport {\n    ParsedShortcut,\n    ShortcutEventOutput,\n    ShortcutInput\n} from \"./../models/shortcut\";\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    repeat,\n    scan,\n    switchMap,\n    takeUntil,\n    tap,\n    throttle\n} from \"rxjs/operators\";\nimport { allPass, any, difference, identity, isFunction, isNill, maxArrayProp } from \"./../utils/common\";\nimport { DOCUMENT } from \"@angular/common\";\n\n/**\n * @ignore\n * @type {number}\n */\nlet guid = 0;\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class KeyboardShortcutsService implements OnDestroy {\n    /**\n     * Parsed shortcuts\n     * for each key create a predicate function\n     */\n    private _shortcuts: ParsedShortcut[] = [];\n\n    private _sequences: ParsedShortcut[] = [];\n\n    /**\n     * Throttle the keypress event.\n     */\n    private throttleTime = 0;\n\n    private _pressed = new Subject();\n\n    /**\n     * Streams of pressed events, can be used instead or with a command.\n     */\n    public pressed$ = this._pressed.asObservable();\n\n    /**\n     * Disable all keyboard shortcuts\n     */\n    private disabled = false;\n    /**\n     * @ignore\n     * 2000 ms window to allow between key sequences otherwise\n     * the sequence will reset.\n     */\n    private static readonly TIMEOUT_SEQUENCE = 1000;\n\n    private _shortcutsSub = new BehaviorSubject([]);\n\n    public shortcuts$ = this._shortcutsSub\n        .asObservable()\n        .pipe(filter(shortcuts => !!shortcuts.length));\n\n    private _ignored = [\"INPUT\", \"TEXTAREA\", \"SELECT\"];\n\n    /**\n     * @ignore\n     * Subscription for on destroy.\n     */\n    private readonly subscriptions: Subscription[] = [];\n\n    /**\n     * @ignore\n     * @param shortcut\n     */\n    private isAllowed = (shortcut: ParsedShortcut) => {\n        const target = shortcut.event.target as HTMLElement;\n\n        if (target === shortcut.target) {\n            return true;\n        }\n\n        if (shortcut.allowIn.length) {\n            return !difference(this._ignored, shortcut.allowIn).includes(target.nodeName);\n        }\n\n        return !this._ignored.includes(target.nodeName);\n    };\n\n    /**\n     * @ignore\n     * @param event\n     */\n    private mapEvent = event => {\n        return this._shortcuts\n            .filter(shortcut => !shortcut.isSequence)\n            .map(shortcut =>\n                Object.assign({}, shortcut, {\n                    predicates: any(\n                        identity,\n                        shortcut.predicates.map((predicates: any) => allPass(predicates)(event))\n                    ),\n                    event: event\n                })\n            )\n            .filter(shortcut => shortcut.predicates)\n            .reduce((acc, shortcut) => (acc.priority > shortcut.priority ? acc : shortcut), {\n                priority: 0\n            } as ParsedShortcut);\n    };\n\n    private keydown$ = fromEvent(this.document, \"keydown\");\n\n    /**\n     * fixes for firefox prevent default\n     * on click event on button focus:\n     * see issue:\n     * keeping this here for now, but it is commented out\n     * Firefox reference bug:\n     * https://bugzilla.mozilla.org/show_bug.cgi?id=1487102\n     * and my repo:\n     *\n     * https://github.com/omridevk/ng-keyboard-shortcuts/issues/35\n     */\n    private ignore$ = this.pressed$.pipe(\n        filter(e => e.event.defaultPrevented),\n        switchMap(() => this.clicks$.pipe(first())),\n        tap((e: any) => {\n            e.preventDefault();\n            e.stopPropagation();\n        }),\n        repeat()\n    );\n\n    /**\n     * @ignore\n     */\n    private clicks$ = fromEvent(this.document, \"click\", { capture: true });\n\n    private keyup$ = fromEvent(this.document, \"keyup\");\n\n    /**\n     * @ignore\n     */\n    private keydownCombo$ = this.keydown$.pipe(\n        filter(_ => !this.disabled),\n        map(this.mapEvent),\n        filter(\n            (shortcut: ParsedShortcut) =>\n                !shortcut.target || shortcut.event.target === shortcut.target\n        ),\n        filter((shortcut: ParsedShortcut) => isFunction(shortcut.command)),\n        filter(this.isAllowed),\n        tap(shortcut => {\n            if (!shortcut.preventDefault) {\n                return;\n            }\n            shortcut.event.preventDefault();\n            shortcut.event.stopPropagation();\n        }),\n        throttle(shortcut => timer(shortcut.throttleTime)),\n        tap(shortcut => shortcut.command({ event: shortcut.event, key: shortcut.key })),\n        tap(shortcut => this._pressed.next({ event: shortcut.event, key: shortcut.key })),\n        takeUntil(this.keyup$),\n        repeat(),\n        catchError(error => throwError(error))\n    );\n\n    /**\n     * @ignore\n     */\n    private timer$ = new Subject();\n\n    /**\n     * @ignore\n     */\n    private resetCounter$ = this.timer$\n        .asObservable()\n        .pipe(switchMap(() => timer(KeyboardShortcutsService.TIMEOUT_SEQUENCE)));\n\n    /**\n     * @ignore\n     */\n    private keydownSequence$ = this.shortcuts$.pipe(\n        map(shortcuts => shortcuts.filter(shortcut => shortcut.isSequence)),\n        switchMap(sequences =>\n            this.keydown$.pipe(\n                map(event => {\n                    return {\n                        event,\n                        sequences\n                    };\n                }),\n                tap(value => this.timer$.next(value))\n            )\n        ),\n        scan(\n            (acc: { events: any[]; command?: any; sequences: any[] }, arg: any) => {\n                let { event } = arg;\n                const currentLength = acc.events.length;\n                const sequences = currentLength ? acc.sequences : arg.sequences;\n                let [characters] = this.characterFromEvent(event);\n                characters = Array.isArray(characters)\n                    ? [...characters, event.key]\n                    : [characters, event.key];\n                const result = sequences\n                    .map(sequence => {\n                        const sequences = sequence.sequence.filter(seque =>\n                            characters.some(\n                                key =>\n                                    (_SPECIAL_CASES[seque[currentLength]] ||\n                                        seque[currentLength]) === key\n                            )\n                        );\n                        const partialMatch = sequences.length > 0;\n                        if (sequence.fullMatch) {\n                            return sequence;\n                        }\n                        return {\n                            ...sequence,\n                            sequence: sequences,\n                            partialMatch,\n                            event: event,\n                            fullMatch:\n                                partialMatch &&\n                                this.isFullMatch({ command: sequence, events: acc.events })\n                        };\n                    })\n                    .filter(sequences => sequences.partialMatch || sequences.fullMatch);\n\n                let [match] = result;\n                if (!match || this.modifiersOn(event)) {\n                    return { events: [], sequences: this._sequences };\n                }\n                /*\n                 * handle case of \"?\" sequence and \"? a\" sequence\n                 * need to determine which one to trigger.\n                 * if both match, we pick the longer one (? a) in this case.\n                 */\n                const guess = maxArrayProp(\"priority\", result);\n                if (result.length > 1 && guess.fullMatch) {\n                    return { events: [], command: guess, sequences: this._sequences };\n                }\n                if (result.length > 1) {\n                    return { events: [...acc.events, event], command: result, sequences: result };\n                }\n                if (match.fullMatch) {\n                    return { events: [], command: match, sequences: this._sequences };\n                }\n                return { events: [...acc.events, event], command: result, sequences: result };\n            },\n            { events: [], sequences: [] }\n        ),\n        switchMap(({ command }) => {\n            if (Array.isArray(command)) {\n                /*\n                 * Add a timer to handle the case where for example:\n                 * a sequence \"?\" is registered and \"? a\" is registered as well\n                 * if the user does not hit any key for 500ms, the single sequence will trigger\n                 * if any keydown event occur, this timer will reset, given a chance to complete\n                 * the full sequence (? a) in this case.\n                 * This delay only occurs when single key sequence is the beginning of another sequence.\n                 */\n                return timer(500).pipe(\n                    map(() => ({ command: command.filter(command => command.fullMatch)[0] }))\n                );\n            }\n            return of({ command });\n        }),\n        takeUntil(this.pressed$),\n        filter(({ command }) => command && command.fullMatch),\n        map(({ command }) => command),\n        filter((shortcut: ParsedShortcut) => isFunction(shortcut.command)),\n        filter(\n            (shortcut: ParsedShortcut) =>\n                !shortcut.target || shortcut.event.target === shortcut.target\n        ),\n        filter(this.isAllowed),\n        tap(shortcut => !shortcut.preventDefault || shortcut.event.preventDefault()),\n        throttle(shortcut => timer(shortcut.throttleTime)),\n        tap(shortcut => shortcut.command({ event: shortcut.event, key: shortcut.key })),\n        tap(shortcut => this._pressed.next({ event: shortcut.event, key: shortcut.key })),\n        takeUntil(this.resetCounter$),\n        repeat()\n    );\n\n    /**\n     * @ignore\n     * @param command\n     * @param events\n     */\n    private isFullMatch({ command, events }) {\n        if (!command) {\n            return false;\n        }\n\n        return command.sequence.some(sequence => {\n            return sequence.length === events.length + 1;\n        });\n    }\n\n    /**\n     * @ignore\n     */\n    private get shortcuts() {\n        return this._shortcuts;\n    }\n\n    /**\n     * @ignore\n     */\n    constructor(@Inject(DOCUMENT) private document: any) {\n        this.subscriptions.push(\n            this.keydownSequence$.subscribe(),\n            this.keydownCombo$.subscribe()\n            // this.ignore$.subscribe()\n        );\n    }\n\n    /**\n     * @ignore\n     * @param event\n     */\n    private _characterFromEvent(event): [string, boolean] {\n        if (typeof event.which !== \"number\") {\n            event.which = event.keyCode;\n        }\n\n        if (_SPECIAL_CASES[event.which]) {\n            return [_SPECIAL_CASES[event.which], event.shiftKey];\n        }\n\n        if (_MAP[event.which]) {\n            // for non keypress events the special maps are needed\n            return [_MAP[event.which], event.shiftKey];\n        }\n\n        if (_KEYCODE_MAP[event.which]) {\n            return [_KEYCODE_MAP[event.which], event.shiftKey];\n        }\n\n        // in case event key is lower case but registered key is upper case\n        // return it in the lower case\n        if (String.fromCharCode(event.which).toLowerCase() !== event.key) {\n            return [String.fromCharCode(event.which).toLowerCase(), event.shiftKey];\n        }\n\n        return [event.key, event.shiftKey];\n    }\n\n    private characterFromEvent(event) {\n        let [key, shiftKey] = this._characterFromEvent(event);\n\n        if (shiftKey && _SHIFT_MAP[key]) {\n            return [_SHIFT_MAP[key], shiftKey];\n        }\n\n        return [key, shiftKey];\n    }\n\n    /**\n     * @ignore\n     * Remove subscription.\n     */\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n    }\n\n    /**\n     * @ignore\n     * @param shortcuts\n     */\n    private isSequence(shortcuts: string[]): boolean {\n        return !shortcuts.some(shortcut => shortcut.includes(\"+\") || shortcut.length === 1);\n    }\n\n    /**\n     * Add new shortcut/s\n     */\n    public add(shortcuts: ShortcutInput[] | ShortcutInput): string[] {\n        shortcuts = Array.isArray(shortcuts) ? shortcuts : [shortcuts];\n\n        const commands = this.parseCommand(shortcuts);\n\n        commands.forEach(command => {\n            if (command.isSequence) {\n                this._sequences.push(command);\n                return;\n            }\n            this._shortcuts.push(command);\n        });\n\n        setTimeout(() => {\n            this._shortcutsSub.next([...this._shortcuts, ...this._sequences]);\n        });\n\n        return commands.map(command => command.id);\n    }\n\n    /**\n     * Remove a command based on key or array of keys.\n     * can be used for cleanup.\n     * @returns\n     * @param ids\n     */\n    public remove(ids: string | string[]): KeyboardShortcutsService {\n        ids = Array.isArray(ids) ? ids : [ids];\n\n        this._shortcuts = this._shortcuts.filter(shortcut => !ids.includes(shortcut.id));\n        this._sequences = this._sequences.filter(shortcut => !ids.includes(shortcut.id));\n\n        setTimeout(() => {\n            this._shortcutsSub.next([...this._shortcuts, ...this._sequences]);\n        });\n\n        return this;\n    }\n\n    /**\n     * Returns an observable of keyboard shortcut filtered by a specific key.\n     * @param key - the key to filter the observable by.\n     */\n    public select(key: string): Observable {\n        return this.pressed$.pipe(\n            filter(({ event, key: eventKeys }) => {\n                eventKeys = Array.isArray(eventKeys) ? eventKeys : [eventKeys];\n                return !!eventKeys.find(eventKey => eventKey === key);\n            })\n        );\n    }\n\n    /**\n     * @ignore\n     * transforms a shortcut to:\n     * a predicate function\n     */\n    private getKeys = (keys: string[]) => {\n        return keys\n            .map(key => key.trim())\n            .filter(key => key !== \"+\")\n            .map(key => {\n                // for modifiers like control key\n                // look for event['ctrlKey']\n                // otherwise use the keyCode\n                key = _SPECIAL_CASES[key] || key;\n                if (modifiers.hasOwnProperty(key)) {\n                    return event => {\n                        return !!event[modifiers[key]];\n                    };\n                }\n\n                return event => {\n                    const isUpper = key === key.toUpperCase();\n                    const isNonAlpha = /[^a-zA-Z\\d\\s:]/.test(key);\n                    const inShiftMap = _INVERTED_SHIFT_MAP[key];\n                    let [characters, shiftKey] = this.characterFromEvent(event);\n                    const allModifiers = Object.keys(modifiers).map(key => {\n                        return modifiers[key];\n                    });\n                    const hasModifiers = allModifiers.some(modifier => event[modifier]);\n                    characters = Array.isArray(characters)\n                        ? [...characters, event.key]\n                        : [characters, event.key];\n\n                    // if has modifiers:\n                    // we want to make sure it is not upper case letters\n                    // (because upper has modifiers so we want continue the check)\n                    // we also want to make sure it is not alphanumeric char like ? / ^ & and others (since those could require modifiers as well)\n                    // we also want to check this only if the length of\n                    // of the keys is one (i.e the command key is \"?\" or \"c\"\n                    // this while check is here to verify that:\n                    // if registered key like \"e\"\n                    // it won't be fired when clicking ctrl + e, or any modifiers + the key\n                    // we only want to trigger when the single key is clicked alone\n                    // thus all these edge cases.\n                    // hopefully this would cover all cases\n                    // TODO:: find a way simplify this\n                    if (\n                        hasModifiers &&\n                        (!isUpper || isNonAlpha) &&\n                        !inShiftMap &&\n                        keys.length === 1\n                    ) {\n                        return false;\n                    }\n\n                    return characters.some(char => {\n                        if (char === key && isUpper) {\n                            return true;\n                        }\n\n                        return key === char;\n                    });\n                };\n            });\n    };\n\n    /**\n     * @ignore\n     * @param event\n     */\n    private modifiersOn(event) {\n        return [\"metaKey\", \"altKey\", \"ctrlKey\"].some(mod => event[mod]);\n    }\n\n    /**\n     * @ignore\n     * Parse each command using getKeys function\n     */\n    private parseCommand(command: ShortcutInput | ShortcutInput[]): ParsedShortcut[] {\n        const commands = Array.isArray(command) ? command : [command];\n\n        return commands.map(command => {\n            const keys = Array.isArray(command.key) ? command.key : [command.key];\n            const priority = Math.max(...keys.map(key => key.split(\" \").filter(identity).length));\n            const predicates = keys.map(key => this.getKeys(key.split(\" \").filter(identity)));\n            const isSequence = this.isSequence(keys);\n\n            const sequence = isSequence\n                ? keys.map(key =>\n                      key\n                          .split(\" \")\n                          .filter(identity)\n                          .map(key => key.trim())\n                  )\n                : [];\n            return {\n                ...command,\n                isSequence,\n                sequence: isSequence ? sequence : [],\n                allowIn: command.allowIn || [],\n                key: keys,\n                id: `${guid++}`,\n                throttle: isNill(command.throttleTime) ? this.throttleTime : command.throttleTime,\n                priority: priority,\n                predicates: predicates\n            } as ParsedShortcut;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Shortcut.html":{"url":"interfaces/Shortcut.html","title":"interface - Shortcut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Shortcut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng-keyboard-shortcuts/src/lib/shared/models/shortcut.ts\n        \n\n\n            \n                Description\n            \n            \n                The shortcut input for the Directive\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            preventDefault\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            throttleTime\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        command\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        command\n                        \n                    \n                \n            \n            \n                \ncommand(event: ShortcutEventOutput)\n                \n            \n\n\n            \n                \n                    Defined in projects/ng-keyboard-shortcuts/src/lib/shared/models/shortcut.ts:14\n                \n            \n\n\n            \n                \n                    callback to be called when shortcut is pressed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                ShortcutEventOutput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe event out\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Description for the command can be used for rendering help menu.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A key or list of keys to listen to and fire the command.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Label, can be used for grouping commands.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preventDefault\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preventDefault:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Prevent browser default, default: false\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        throttleTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        throttleTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How much time to throttle in ms.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Shortcut {\n    /**\n     * A key or list of keys to listen to and fire the command.\n     */\n    key: string | string[];\n\n    /**\n     * callback to be called when shortcut is pressed.\n     * @param event - the event out\n     */\n    command(event: ShortcutEventOutput): any;\n\n    /**\n     * Description for the command can be used for rendering help menu.\n     */\n    description?: string;\n\n    /**\n     * How much time to throttle in ms.\n     */\n    throttleTime?: number;\n\n    /**\n     * Label, can be used for grouping commands.\n     */\n    label?: string;\n\n    /**\n     * Prevent browser default, default: false\n     */\n    preventDefault?: boolean;\n}\n\n/**\n * The shortcut input type for ng-keyboard-shortcuts component\n */\nexport interface ShortcutInput extends Shortcut {\n    /**\n     * textarea, select and input are ignored by default, this is used to override\n     * this behavior.\n     * allow in node names, accepts: [\"TEXTAREA\", \"SELECT\", \"INPUT]\n     */\n    allowIn?: AllowIn[];\n\n    /**\n     * Only trigger the command when the target is in focus.\n     */\n    target?: HTMLElement;\n}\n\nexport enum AllowIn {\n    Textarea = \"TEXTAREA\",\n    Input = \"INPUT\",\n    Select = \"SELECT\"\n}\n\n/**\n * @ignore\n */\nexport interface ParsedShortcut extends ShortcutInput {\n    key: string[];\n    predicates: Function[][];\n    id: string;\n    priority?: number;\n\n    isSequence: boolean;\n    sequence?: string[][];\n    event?: KeyboardEvent;\n}\n\n/**\n * The output type fired by the command when shortcut is triggered.\n */\nexport interface ShortcutEventOutput {\n    /**\n     * The browser keyboard event\n     */\n    event: KeyboardEvent;\n\n    /**\n     * The registered key that was triggered\n     */\n    key: string[] | string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShortcutEventOutput.html":{"url":"interfaces/ShortcutEventOutput.html","title":"interface - ShortcutEventOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShortcutEventOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng-keyboard-shortcuts/src/lib/shared/models/shortcut.ts\n        \n\n\n            \n                Description\n            \n            \n                The output type fired by the command when shortcut is triggered.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            event\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:     KeyboardEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     KeyboardEvent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The browser keyboard event\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:     string[] | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The registered key that was triggered\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Shortcut {\n    /**\n     * A key or list of keys to listen to and fire the command.\n     */\n    key: string | string[];\n\n    /**\n     * callback to be called when shortcut is pressed.\n     * @param event - the event out\n     */\n    command(event: ShortcutEventOutput): any;\n\n    /**\n     * Description for the command can be used for rendering help menu.\n     */\n    description?: string;\n\n    /**\n     * How much time to throttle in ms.\n     */\n    throttleTime?: number;\n\n    /**\n     * Label, can be used for grouping commands.\n     */\n    label?: string;\n\n    /**\n     * Prevent browser default, default: false\n     */\n    preventDefault?: boolean;\n}\n\n/**\n * The shortcut input type for ng-keyboard-shortcuts component\n */\nexport interface ShortcutInput extends Shortcut {\n    /**\n     * textarea, select and input are ignored by default, this is used to override\n     * this behavior.\n     * allow in node names, accepts: [\"TEXTAREA\", \"SELECT\", \"INPUT]\n     */\n    allowIn?: AllowIn[];\n\n    /**\n     * Only trigger the command when the target is in focus.\n     */\n    target?: HTMLElement;\n}\n\nexport enum AllowIn {\n    Textarea = \"TEXTAREA\",\n    Input = \"INPUT\",\n    Select = \"SELECT\"\n}\n\n/**\n * @ignore\n */\nexport interface ParsedShortcut extends ShortcutInput {\n    key: string[];\n    predicates: Function[][];\n    id: string;\n    priority?: number;\n\n    isSequence: boolean;\n    sequence?: string[][];\n    event?: KeyboardEvent;\n}\n\n/**\n * The output type fired by the command when shortcut is triggered.\n */\nexport interface ShortcutEventOutput {\n    /**\n     * The browser keyboard event\n     */\n    event: KeyboardEvent;\n\n    /**\n     * The registered key that was triggered\n     */\n    key: string[] | string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShortcutInput.html":{"url":"interfaces/ShortcutInput.html","title":"interface - ShortcutInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShortcutInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ng-keyboard-shortcuts/src/lib/shared/models/shortcut.ts\n        \n\n\n            \n                Description\n            \n            \n                The shortcut input type for ng-keyboard-shortcuts component\n\n            \n\n            \n                Extends\n            \n            \n                        Shortcut\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            allowIn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowIn:         AllowIn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AllowIn[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    textarea, select and input are ignored by default, this is used to override\nthis behavior.\nallow in node names, accepts: [\"TEXTAREA\", \"SELECT\", \"INPUT]\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Only trigger the command when the target is in focus.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Shortcut {\n    /**\n     * A key or list of keys to listen to and fire the command.\n     */\n    key: string | string[];\n\n    /**\n     * callback to be called when shortcut is pressed.\n     * @param event - the event out\n     */\n    command(event: ShortcutEventOutput): any;\n\n    /**\n     * Description for the command can be used for rendering help menu.\n     */\n    description?: string;\n\n    /**\n     * How much time to throttle in ms.\n     */\n    throttleTime?: number;\n\n    /**\n     * Label, can be used for grouping commands.\n     */\n    label?: string;\n\n    /**\n     * Prevent browser default, default: false\n     */\n    preventDefault?: boolean;\n}\n\n/**\n * The shortcut input type for ng-keyboard-shortcuts component\n */\nexport interface ShortcutInput extends Shortcut {\n    /**\n     * textarea, select and input are ignored by default, this is used to override\n     * this behavior.\n     * allow in node names, accepts: [\"TEXTAREA\", \"SELECT\", \"INPUT]\n     */\n    allowIn?: AllowIn[];\n\n    /**\n     * Only trigger the command when the target is in focus.\n     */\n    target?: HTMLElement;\n}\n\nexport enum AllowIn {\n    Textarea = \"TEXTAREA\",\n    Input = \"INPUT\",\n    Select = \"SELECT\"\n}\n\n/**\n * @ignore\n */\nexport interface ParsedShortcut extends ShortcutInput {\n    key: string[];\n    predicates: Function[][];\n    id: string;\n    priority?: number;\n\n    isSequence: boolean;\n    sequence?: string[][];\n    event?: KeyboardEvent;\n}\n\n/**\n * The output type fired by the command when shortcut is triggered.\n */\nexport interface ShortcutEventOutput {\n    /**\n     * The browser keyboard event\n     */\n    event: KeyboardEvent;\n\n    /**\n     * The registered key that was triggered\n     */\n    key: string[] | string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/components/help/help.component.ts\n            \n            component\n            KeyboardShortcutsHelpComponent\n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/components/keyboard-shortcuts/keyboard-shortcuts.component.ts\n            \n            component\n            KeyboardShortcutsComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/directives/keyboard-shortcuts.directive.ts\n            \n            directive\n            KeyboardShortcutsDirective\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/models/key.ts\n            \n            variable\n            _INVERTED_SHIFT_MAP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/models/key.ts\n            \n            variable\n            _KEYCODE_MAP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/models/key.ts\n            \n            variable\n            _MAP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/models/key.ts\n            \n            variable\n            _SHIFT_MAP\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/models/key.ts\n            \n            variable\n            _SPECIAL_CASES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/models/key.ts\n            \n            variable\n            isMac\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/models/key.ts\n            \n            variable\n            modifiers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/models/key.ts\n            \n            variable\n            symbols\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/models/shortcut.ts\n            \n            interface\n            Shortcut\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/models/shortcut.ts\n            \n            interface\n            ShortcutEventOutput\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/models/shortcut.ts\n            \n            interface\n            ShortcutInput\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/services/shortcut-help.service.ts\n            \n            injectable\n            KeyboardShortcutsHelpService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/services/shortcut-select.service.ts\n            \n            injectable\n            KeyboardShortcutsSelectService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/services/shortcut.service.ts\n            \n            injectable\n            KeyboardShortcutsService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/utils/common.ts\n            \n            function\n            isFunction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/utils/common.ts\n            \n            variable\n            any\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/utils/common.ts\n            \n            variable\n            identity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/utils/common.ts\n            \n            variable\n            invert\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/utils/common.ts\n            \n            variable\n            maxArrayProp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/utils/common.ts\n            \n            variable\n            minMaxArrayProp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ng-keyboard-shortcuts/src/lib/shared/utils/common.ts\n            \n            variable\n            prop\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllowIn   (projects/.../shortcut.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ng-keyboard-shortcuts/src/lib/shared/models/shortcut.ts\n    \n        \n            \n                \n                    \n                        \n                        AllowIn\n                    \n                \n                        \n                            \n                                 Textarea\n                            \n                        \n                        \n                            \n                                Value : TEXTAREA\n                            \n                        \n                        \n                            \n                                 Input\n                            \n                        \n                        \n                            \n                                Value : INPUT\n                            \n                        \n                        \n                            \n                                 Select\n                            \n                        \n                        \n                            \n                                Value : SELECT\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isFunction   (projects/.../common.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ng-keyboard-shortcuts/src/lib/shared/utils/common.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isFunction\n                        \n                    \n                \n            \n            \n                \nisFunction(x: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nng-keyboard-shortcuts\n\n\n\n\nAn Angular module that provides a declarative API using components/directive to manage Keyboard shortcuts in scalable way.\nLive Demo & Edit on Stackblitz\nTable of contents\n\nng-keyboard-shortcuts\nTable of contents\nDeveloper Notes\nMigrating from ng-keyboard-shortcuts.\nInstall\n\n\nStart\nUsage\nCombinations\nExamples\n\n\nSequences\nImportant Notes\nExamples\n\n\nComponents\nng-keyboard-shortcuts\nInputs\nMethods:\nng-keyboard-shortcuts-help\nInputs\nMethods\nMethods:\n\n\n\n\nDirective\nngKeyboardShortcuts\nImportant\nInputs\nExample\n\n\n\n\nService\nKeyboardShortcutsHelpService\nKeyboardShortcutsSelectService\n\n\nAPI\nTypes\nAllowIn\nShortcut\nShortcutInput\nShortcutEventOutput\n\n\nDuplicated items in help menu\n\n\nBuilding & Publishing\nPublishing on NPM\nLoading as dependency on localhost\n\n\nLicense\n\nDeveloper Notes\n\nThis project forked from omridevk/ng-keyboard-shortcuts to support new angular versions and fix known bugs.\nRecommending to update to version 7.0.0 and above and use the new component API which has better memory management than previous version.\nThe minimum rxjs version is ^6.3.0 anymore with v13.x.\nThis documentation is for Angular version v7-13. For older versions (2.0.0/6.0.0) please click here\n\nMigrating from ng-keyboard-shortcuts.\n\nRemove ng-keyboard-shortcuts from your project\nInstall @egoistdeveloper/ng-keyboard-shortcuts\nReplace importings ng-keyboard-shortcuts with @egoistdeveloper/ng-keyboard-shortcuts.\n\nInstall\n\n\n\nAngular\nPackage\n\n\n\n\nv13\nnpm i @egoistdeveloper/ng-keyboard-shortcuts@latest --save\n\n\nv10/11/12/13\nnpm i @egoistdeveloper/ng-keyboard-shortcuts@^13.0.0 --save\n\n\nv8/9\nnpm i ng-keyboard-shortcuts@^9.0.0 --save\n\n\nv7\nnpm i ng-keyboard-shortcuts@^7.0.0 --save\n\n\n\nStart\nAdd KeyboardShortcutsModule module to your AppModule or child module.\nimport { KeyboardShortcutsModule } from \"@egoistdeveloper/ng-keyboard-shortcuts\";\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n        BrowserModule,\n        KeyboardShortcutsModule.forRoot()\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    // ...\n}Usage\nCombinations\nKey combinations are used with meta keys like control, shift, command, etc... and are defined using plus(+) sign as a separator. There can be multiple combinations for the same command, so either of the key combination will trigger the callback.\nSince combinations uses the plus sign as a seperator, if you want to bind to the actual + charachater,\nyou will need to use \"plus\" instead.\nExamples\n[\n  {\n    key: [\"cmd + a\"],\n    command: (output: ShortcutEventOutput) => console.log(\"command + a\", output),\n  },\n  {\n    key: \"ctrl + a\",\n    preventDefault: true,\n    command: (output: ShortcutEventOutput) => console.log(\"control + a\", output),\n  },\n  {\n    key: \"ctrl + plus\",\n    preventDefault: true,\n    command: (output: ShortcutEventOutput) => console.log(\"control + plus key\", output),\n  }\n]Sequences\nSequences can be used to support gmail like actions where you click \"g\" then \"a\", or \"g\" then \"o\" to perform certain actions.\nImportant Notes\nThe library can get very confused if you have a single key handler that uses the same key that a sequence starts with. This is because it can't tell if you are starting the sequence or if you are pressing that key on its own.\nTo counter this, there is a 500ms delay(only when single key is used in the beginning of another sequence, so it won't affect performance). This gives the library time to wait for a more complete sequence, otherwise the single sequence will be triggered.\nFor example: binding both \"? a\" and \"?\", then clicking \"?\" will trigger the \"?\" callback, but only after 500ms delay. However, in all other cases there's no delay in execution of the callback (unless debounceTime is provided)\nExamples\nThis library supports gmail style sequences:\n[\n  {\n    key: [\"g a\"],\n    command: (output: ShortcutEventOutput) => console.log(\"? a\", output),\n  }\n]konami code:\n[\n  {\n    key: [\"up up down down left right left right b a enter\"],\n    label: \"Sequences\",\n    description: \"Konami code!\",\n    command: (output: ShortcutEventOutput) => console.log(\"Konami code!!!\", output),\n  }\n]⚠️ Warning: \n\nThe help menu only shows labels and descriptions of sequences. In the above example, the first one is will not be listed in the help menu but still works.\nSequences can be used inside components or directives and are declared without the plus(+) sign, for example: key: [\"a b c\"] will require clicking, a, then b, then c.\n\nComponents\nng-keyboard-shortcuts\nComponent that can be used across the app to bind to various shortcuts\nInputs\n\n\n\nName\nType\nDefault\nDescription\n\n\n\n\nshortcuts\nShortcutInput / ShortcutInput[]\n[]\nList of shortcut inputs types see types\n\n\ndisabled\nboolean\nfalse\ndisable the shortcuts for the component\n\n\n\nMethods:\n\n\n\nName\nInput\nReturn\nDescription\n\n\n\n\nselect\nstring - key to listen to events (example: 'ctrl + x')\nObservable\nListen to specific key events (will only work for registered keys)\n\n\n\napp.component.html\nng-keyboard-shortcuts Demo\n\n\n\n>> Press F2 for the help menu (F1 might be reserved by the browser)\n\n>> {{ shortcutLog ? shortcutLog : 'No Action' }}\n\n\n\n\n\nTest Inputs\n\n\n\n\n\n\n\n\napp.component.ts\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ShortcutInput,\n  ShortcutEventOutput,\n  KeyboardShortcutsComponent,\n  AllowIn,\n} from '@egoistdeveloper/ng-keyboard-shortcuts';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  @ViewChild('input') input: ElementRef;\n  @ViewChild(KeyboardShortcutsComponent) keyboard!: KeyboardShortcutsComponent;\n\n  public keyboardShortcuts: ShortcutInput[] = [];\n  public shortcutLog: string;\n\n  ngAfterViewInit(): void {\n    this.installKeyBindings();\n  }\n\n  private installKeyBindings(): void {\n    this.keyboardShortcuts.push(\n      {\n        key: 'ctrl + x',\n        preventDefault: true,\n        allowIn: [AllowIn.Textarea, AllowIn.Input],\n        label: 'Input',\n        description: 'Cut',\n        command: (e) => {\n          this.shortcutLog = `Action: ${e.key}`;\n\n          console.log(this.shortcutLog);\n        },\n      },\n      {\n        key: 'ctrl + c',\n        preventDefault: true,\n        allowIn: [AllowIn.Textarea, AllowIn.Input],\n        label: 'Input',\n        description: 'Copy',\n        command: (e) => {\n          this.shortcutLog = `Action: ${e.key}`;\n\n          console.log(this.shortcutLog);\n        },\n      },\n      {\n        key: 'ctrl + v',\n        preventDefault: true,\n        allowIn: [AllowIn.Textarea, AllowIn.Input],\n        label: 'Input',\n        description: 'Paste',\n        command: (e) => {\n          this.shortcutLog = `Action: ${e.key}`;\n\n          console.log(this.shortcutLog);\n        },\n      },\n      {\n        key: 'ctrl + f',\n        preventDefault: true,\n        allowIn: [AllowIn.Textarea, AllowIn.Input],\n        label: 'Input',\n        description: 'Find',\n        command: (e) => {\n          this.shortcutLog = `Action: ${e.key}`;\n\n          console.log(this.shortcutLog);\n        },\n      },\n      {\n        key: 'f7',\n        preventDefault: true,\n        label: 'F Button',\n        description: 'Anything',\n        command: (e) => {\n          this.shortcutLog = `Action: ${e.key}`;\n\n          console.log(this.shortcutLog);\n        },\n      },\n      {\n        key: ['? a'],\n        label: 'Sequences',\n        description: 'Sequence ? and a',\n        command: (output: ShortcutEventOutput) => (e) => {\n          this.shortcutLog = `Action: ${e.key}`;\n\n          console.log(this.shortcutLog);\n        },\n        preventDefault: true,\n      },\n      {\n        key: ['up up down down left right left right b a enter'],\n        label: 'Sequences',\n        description: 'Konami code!',\n        command: (output: ShortcutEventOutput) => (e) => {\n          this.shortcutLog = `Konami Code: ${e.key}`;\n\n          console.log(this.shortcutLog);\n        },\n      }\n    );\n\n    this.keyboard.select('ctrl + f').subscribe((e) => console.log(e));\n  }\n}\nng-keyboard-shortcuts-help\n\nMake sure to install @angular/animations ( npm install --save @angular/animations or yarn add @angular/animations  \nAdd BrowserAnimationsModule to your app.module imports\n\nCan be used to show a help screen (will be attached to the body and be shown as a modal). Should be placed in the root of your app, preferably in app.component.html\nInputs\n\n\n\nName\nType\ndefault\ndescription\n\n\n\n\nkey\nstring\nnone\nThe key to show/hide the help modal\n\n\nkeyDescription\nstring\nnone\nDescription to show in the menu shortcut list for the toggle shortcut\n\n\nkeyLabel\nstring\nnone\nLabel that can be used to group shortcuts together in the help menu\n\n\ncloseKey\nstring\nnone\nClose key to be used to close the modal\n\n\ncloseKeyDescription\nstring\nnone\nDescription to show in the menu shortcut list for closing the modal shortcut\n\n\ncloseKeyLabel\nstring\nnone\nLabel that can be used to group shortcuts together in the help menu\n\n\ntitle\nstring\n\"Keyboard shortcuts\"\nThe title of the help screen\n\n\nemptyMessage\nstring\n\"No shortcuts available\"\nWhat message to show when no commands are registered when help modal is opened.\n\n\ndisableScrolling\nboolean\ntrue\nWhether to disable body scrolling when modal help screen is opened.\n\n\n\nMethods\n\n\n\nName\nInput\nReturn\nDescription\n\n\n\n\nhide\nvoid\nKeyboardShortcutsHelpComponent\nProgrammatically hide the modal\n\n\nreveal\nvoid\nKeyboardShortcutsHelpComponent\nProgrammatically hide the modal\n\n\nvisible\nvoid\nboolean\nCheck whether the modal is visible or not.\n\n\ntoggle\nvoid\nKeyboardShortcutsHelpComponent\nProgrammatically toggle the modal visibility\n\n\n\nMethods:\n\n\n\nName\nInput\nReturn\nDescription\n\n\n\n\nselect\nstring - key to listen to events (example: 'cmd + e')\nObservable\nListen to specific key events (will only work for registered keys)\n\n\n\napp.component.ts\nimport { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  template: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})  \nexport class AppComponent {\n  title = \"Hello\";\n}app.component.html\n\n   \n      Welcome to {{ title }}!\n   \n\n   \nDirective\nngKeyboardShortcuts\nDirective can only be used for focusable elements, such as textarea, select, input, etc...\nImportant\nThe shortcut then will only be active while the element is in focus.\nInputs\n\n\n\nName\nType\nDefault\nDescription\n\n\n\n\nngKeyboardShortcuts\nShortcut / Shortcut\n[]\nList of shortcuts see types\n\n\ndisabled\nboolean\nfalse\ndisable the shortcuts for the directive\n\n\ndisableScrolling\nboolean\ntrue\ndisable body scrolling while modal is open\n\n\n\nExample\nimport { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";  \nimport { ShortcutInput, ShortcutEventOutput, KeyboardShortcutsComponent } from \"@egoistdeveloper/ng-keyboard-shortcuts\";\n\n@Component({\n    selector: 'demo-component',\n    template: \"\"\n})  \nexport class DemoComponent implements AfterViewInit {\n    shortcuts: ShortcutInput[] = [];\n    @ViewChild('input') input: ElementRef;\n\n    ngAfterViewInit(): void {\n        this.shortcuts.push({\n            key: \"cmd + e\",\n            label: \"test\",\n            description: \"hello world\",\n            command: () => console.log('directive cmd + e'),\n            preventDefault: true\n        });\n\n        this.keyboard.select(\"cmd + f\").subscribe(e => console.log(e));\n    }\n\n    @ViewChild(KeyboardShortcutsComponent) private keyboard: KeyboardShortcutsComponent;\n}Service\nKeyboardShortcutsHelpService\nSingleton service that can be used to render a custom help screen. (used to build the Built in help component)Provides access to all registered shortcuts in the app using Observable that updates on shortcuts changes.Since shortcuts can be added or removed during the lifecycle of the app, an observable data structure needed to be used.\n\n\n\nProperties\nType\nDescription\n\n\n\n\nshortcuts$\nObservable\nArray of registered shortcuts across the whole app\n\n\n\nKeyboardShortcutsSelectService\nA singleton service that can be used globally to listen to any registered shortcut:\n\n\n\nName\nInput\nReturn\nDescription\n\n\n\n\nselect\nstring - key to listen to events (example: 'cmd + e')\nObservable\nListen to specific key events (will only work for registered keys)\n\n\n\nAPI\nTypes\nAllowIn\nexport enum AllowIn {\n    Textarea = 'TEXTAREA',\n    Input = 'INPUT',\n    Select = \"SELECT\"\n}Shortcut\nUsed for Directive input\nexport interface Shortcut {\n  key: string | string[];\n\n  /**\n   * callback to be called when shortcut is pressed.\n   * @param event - the event out\n   */\n  command(event: ShortcutEventOutput): any;\n\n  /**\n   * Description for the command can be used for rendering help menu.\n   */\n  description?: string;\n\n  /**\n   * How much time to throttle in ms.\n   */\n  throttleTime?: number;\n\n  /**\n   * Label, can be used for grouping commands.\n   */\n  label?: string;\n\n  /**\n   * Prevent browser default, default: false\n   */\n  preventDefault?: boolean;\n}ShortcutInput\nUsed for the component as input.\nexport interface ShortcutInput extends Shortcut {\n  /**\n   * textarea, select and input are ignored by default, this is used to override\n   * this behavior.\n   * allow in node names, accepts: [\"TEXTAREA\", \"SELECT\", \"INPUT]\n   */\n  allowIn?: AllowIn[];\n  /**\n   * Only trigger the command when the target is in focus.\n   */\n  target?: HTMLElement;\n}ShortcutEventOutput\ntype = ShortcutEventOutput {\n  event: KeyboardEvent;\n  key: string | string[];\n}Duplicated items in help menu\nSometimes shortcuts can be loaded twice and these shortcuts show twice in the help menu. This is probably about your logic or app lifecycles.\nTo prevent that use time() method with rxjs or use setTimeout.\ntimer().subscribe(() => {\n  // bind your shortcuts\n});\n\n// or\n\nsetTimeout(() => {\n  // bind your shortcuts\n}, 100);Building & Publishing\nng build or npm run build or npm run build:prod\nPublishing on NPM\nIf you want to publish as own package change package name etc in projects/ng-keyboard-shortcuts/package.json\n\nnpm run build:prod\nnpm publish dist/ng-keyboard-shortcuts (you need login before publish)\n\nLoading as dependency on localhost\n\nnpm run package\nCopy x-ng-keyboard-shortcuts-{version}.tgz file in dist folder\nIn your project folder open terminal and run npm i full/path/to/x-ng-keyboard-shortcuts-{version}.tgz\nRebuild your project and see magic\n\nLicense\nThis project is licensed under the MIT License - see the LICENSE file for details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Omri Katz\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        KeyboardShortcutsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_KeyboardShortcutsModule\n\n\n\ncluster_KeyboardShortcutsModule_declarations\n\n\n\ncluster_KeyboardShortcutsModule_exports\n\n\n\n\nKeyboardShortcutsComponent\n\nKeyboardShortcutsComponent\n\n\n\nKeyboardShortcutsModule\n\nKeyboardShortcutsModule\n\nKeyboardShortcutsModule -->\n\nKeyboardShortcutsComponent->KeyboardShortcutsModule\n\n\n\n\n\nKeyboardShortcutsDirective\n\nKeyboardShortcutsDirective\n\nKeyboardShortcutsModule -->\n\nKeyboardShortcutsDirective->KeyboardShortcutsModule\n\n\n\n\n\nKeyboardShortcutsHelpComponent\n\nKeyboardShortcutsHelpComponent\n\nKeyboardShortcutsModule -->\n\nKeyboardShortcutsHelpComponent->KeyboardShortcutsModule\n\n\n\n\n\nKeyboardShortcutsComponent \n\nKeyboardShortcutsComponent \n\nKeyboardShortcutsComponent  -->\n\nKeyboardShortcutsModule->KeyboardShortcutsComponent \n\n\n\n\n\nKeyboardShortcutsDirective \n\nKeyboardShortcutsDirective \n\nKeyboardShortcutsDirective  -->\n\nKeyboardShortcutsModule->KeyboardShortcutsDirective \n\n\n\n\n\nKeyboardShortcutsHelpComponent \n\nKeyboardShortcutsHelpComponent \n\nKeyboardShortcutsHelpComponent  -->\n\nKeyboardShortcutsModule->KeyboardShortcutsHelpComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _INVERTED_SHIFT_MAP   (projects/.../key.ts)\n                        \n                        \n                            _KEYCODE_MAP   (projects/.../key.ts)\n                        \n                        \n                            _MAP   (projects/.../key.ts)\n                        \n                        \n                            _SHIFT_MAP   (projects/.../key.ts)\n                        \n                        \n                            _SPECIAL_CASES   (projects/.../key.ts)\n                        \n                        \n                            any   (projects/.../common.ts)\n                        \n                        \n                            identity   (projects/.../common.ts)\n                        \n                        \n                            invert   (projects/.../common.ts)\n                        \n                        \n                            isMac   (projects/.../key.ts)\n                        \n                        \n                            maxArrayProp   (projects/.../common.ts)\n                        \n                        \n                            minMaxArrayProp   (projects/.../common.ts)\n                        \n                        \n                            modifiers   (projects/.../key.ts)\n                        \n                        \n                            prop   (projects/.../common.ts)\n                        \n                        \n                            symbols   (projects/.../key.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ng-keyboard-shortcuts/src/lib/shared/models/key.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        _INVERTED_SHIFT_MAP\n                        \n                    \n                \n            \n                \n                    \n                        Default value : invert(_SHIFT_MAP)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _KEYCODE_MAP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    106: \"*\",\n    107: \"+\",\n    109: \"-\",\n    110: \".\",\n    111: \"/\",\n    186: \";\",\n    187: \"=\",\n    188: \",\",\n    189: \"-\",\n    190: \".\",\n    191: \"/\",\n    192: \"`\",\n    219: \"[\",\n    220: \"\\\\\",\n    221: \"]\",\n    222: \"'\"\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _MAP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    8: \"backspace\",\n    9: \"tab\",\n    13: \"enter\",\n    16: \"shift\",\n    17: [\"ctrl\", \"control\"],\n    18: \"alt\",\n    20: \"capslock\",\n    27: [\"esc\", \"escape\"],\n    32: [\"space\", \"spc\"],\n    33: \"pageup\",\n    34: \"pagedown\",\n    35: \"end\",\n    36: \"home\",\n    37: \"left\",\n    38: \"up\",\n    39: \"right\",\n    40: \"down\",\n    45: \"ins\",\n    46: \"del\",\n    91: [\"meta\", \"cmd\", \"command\"],\n    93: [\"meta\", \"cmd\", \"command\"],\n    224: [\"meta\", \"cmd\", \"command\"]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _SHIFT_MAP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    \"`\": \"~\",\n    \"1\": \"!\",\n    \"2\": \"@\",\n    \"3\": \"#\",\n    \"4\": \"$\",\n    \"5\": \"%\",\n    \"6\": \"^\",\n    \"7\": \"&\",\n    \"8\": \"*\",\n    \"9\": \"(\",\n    \"0\": \")\",\n    \"-\": \"_\",\n    \"=\": \"+\",\n    \";\": \":\",\n    \"'\": '\"',\n    \",\": \"\",\n    \"/\": \"?\",\n    \"\\\\\": \"|\"\n}\n                    \n                \n\n            \n                \n                    this is a mapping of keys that require shift on a US keypad\nback to the non shift equivelents\nthis is so you can use keyup events with these keys\nnote that this will only work reliably on US keyboards\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _SPECIAL_CASES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    plus: \"+\"\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMac\n                        \n                    \n                \n            \n                \n                    \n                        Default value : typeof navigator !== \"undefined\" ? navigator.userAgent.includes(\"Mac OS\") : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifiers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    shift: \"shiftKey\",\n    ctrl: \"ctrlKey\",\n    alt: \"altKey\",\n    cmd: isMac ? \"metaKey\" : \"ctrlKey\",\n    command: isMac ? \"metaKey\" : \"ctrlKey\",\n    meta: isMac ? \"metaKey\" : \"ctrlKey\",\n    \"left command\": \"metaKey\",\n    \"right command\": \"MetaRight\",\n    \"⌘\": isMac ? \"metaKey\" : \"ctrlKey\",\n    option: \"altKey\",\n    ctl: \"ctrlKey\",\n    control: \"ctrlKey\"\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        symbols\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    cmd: isMac ? \"⌘\" : \"Ctrl\",\n    command: isMac ? \"⌘\" : \"Ctrl\",\n    \"left command\": isMac ? \"⌘\" : \"Ctrl\",\n    \"right command\": isMac ? \"⌘\" : \"Ctrl\",\n    option: isMac ? \"⌥\" : \"Alt\",\n    plus: \"+\",\n    left: \"←\",\n    right: \"→\",\n    up: \"↑\",\n    down: \"↓\",\n    alt: isMac ? \"⌥\" : \"Alt\",\n    ctrl: \"Ctrl\",\n    control: \"Ctrl\",\n    shift: \"⇧\"\n}\n                    \n                \n\n\n        \n    \n\n    projects/ng-keyboard-shortcuts/src/lib/shared/utils/common.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        any\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (fn: Function, list: any[]) => {\n    let idx = 0;\n\n    while (idx \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identity\n                        \n                    \n                \n            \n                \n                    \n                        Default value : x => x\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : obj => {\n    const new_obj = {};\n\n    for (const prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n            new_obj[obj[prop]] = prop;\n        }\n    }\n\n    return new_obj;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxArrayProp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (property, array) => {\n    return array.reduce(\n        (acc, curr) => {\n            const propFn = prop(property);\n            const currentValue = propFn(curr);\n            const previousValue = propFn(acc);\n            return currentValue > previousValue ? curr : acc;\n        },\n        { [property]: 0 }\n    );\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minMaxArrayProp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : type => (property, array) =>\n    Math[type].apply(Math, array.map(prop(property)))\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prop\n                        \n                    \n                \n            \n                \n                    \n                        Default value : prop => object => object[prop]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
